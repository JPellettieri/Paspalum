modelo_loc <- lmer(DMR ~ Localidad + Línea + Localidad*Línea  + (1|Año), data = relativos)
# Medias estimadas de DMR por Localidad
emm_loc <- emmeans(modelo_loc, ~ Localidad)
# Comparaciones post hoc con letras
cld_loc <- multcomp::cld(emm_loc, Letters = letters, adjust = "tukey")
df_plot_loc <- as.data.frame(cld_loc)
# Paleta de colores (misma que antes, con tu modificación)
cols <- paletteer_d("ggthemes::excel_Depth")
summary(modelo_loc)
anova(modelo_loc)  #Si
emm_lineas <- emmeans(modelo_loc, ~ Línea) #contraste
pairs(emm_lineas, adjust = "tukey") #J7-L37 y J7-UF93
summary(modelo_loc)
anova(modelo_loc)  #Si
#### Interaccion genotipo ambiente ####
# Modelo con Localidad como VE y Línea/Año como efectos aleatorios
modelo_loc <- lmer(DMR ~ Localidad + Línea + Localidad*Línea + (1|Año), data = relativos)
# Medias estimadas de DMR por Localidad
emm_loc <- emmeans(modelo_loc, ~ Localidad)
summary(modelo_loc)
anova(modelo_loc)  #Si
#### Interaccion genotipo ambiente ####
# Modelo con Localidad como VE y Línea/Año como efectos aleatorios
modelo_GEI <- lmer(DMR ~ Localidad + Línea + Localidad*Línea + (1|Año), data = relativos)
# Medias estimadas de DMR por Localidad
emm_GEI <- emmeans(modelo_GEI, ~ Localidad)
summary(modelo_GEI)
anova(modelo_GEI)  #Si
#### Interaccion genotipo ambiente ####
# Modelo con Localidad como VE y Línea/Año como efectos aleatorios
modelo_GEI <- lmer(DMR ~ Localidad*Línea + (1|Año), data = relativos)
# Medias estimadas de DMR por Localidad
emm_GEI <- emmeans(modelo_GEI, ~ Localidad)
summary(modelo_GEI)
anova(modelo_GEI)  #Si
emm_lineas <- emmeans(modelo_GEI, ~ Línea) #contraste
pairs(emm_lineas, adjust = "tukey") #J7-L37 y J7-UF93
# Comparaciones post hoc con letras
cld_loc <- multcomp::cld(emm_loc, Letters = letters, adjust = "tukey")
#supuestos
# Residuos del modelo
residuos <- residuals(modelo_GEI)
shapiro.test(residuos)
leveneTest(DMR ~ Localidad*Línea, data = relativos)
# Medias estimadas de DMR por Localidad
emm_GEI <- emmeans(modelo_GEI, ~ Localidad)
#Poissonnn#
modelo_GEI_pois <- glmer(DMR ~ Localidad*Línea + (1|Año),
family = poisson(link = "log"),
data = relativos)
#Poissonnn#
modelo_GEI <- glmer(DMR ~ Localidad*Línea + (1|Año),
family = poisson(link = "log"),
data = relativos)
res <- simulateResiduals(modelo_GEI)
plot(res)
testDispersion(res)#  Test de sobredispersión
#Poissonnn#
modelo_GEI <- glmer(DMR ~ Localidad*Línea + (1|Año),
family = nbinom1,
data = relativos)
#Poissonnn#
modelo_GEI <- glmmTMB( DMR ~ Localidad * Línea + (1|Año), family = nbinom2,  data = relativos)
res <- simulateResiduals(modelo_GEI)
plot(res)
#Poissonnn#
modelo_GEI <- glmmTMB( DMR ~ Localidad * Línea + (1|Año), family = nbinom2,  data = relativos)
#Poissonnn#
modelo_GEI_beta <- glmmTMB(
DMR ~ Localidad*Línea + (1|Año),
ziformula = ~1,            # componente de inflación de ceros
family = beta_family(link = "logit"),
data = relativos
)
modelo_GEI_tweedie <- glmmTMB(
DMR ~ Localidad*Línea + (1|Año),
family = tweedie(link="log"),
data = relativos
)
res <- simulateResiduals(modelo_GEI)
plot(res)
modelo_GEI <- glmmTMB(
DMR ~ Localidad*Línea + (1|Año),
family = tweedie(link="log"),
data = relativos
)
res <- simulateResiduals(modelo_GEI)
plot(res)
testDispersion(res)#  Test de sobredispersión
testZeroInflation(res)#  Test de cero-inflación (exceso de ceros)
## Hay dif entre localidades? # sin relativizar
# Modelo con Localidad como VE y Línea/Año como efectos aleatorios
modelo_loc <- <- glmmTMB(
## Hay dif entre localidades? # sin relativizar
# Modelo con Localidad como VE y Línea/Año como efectos aleatorios
modelo_loc <- glmmTMB(
DMR ~ Localidad+ (1|Línea) + (1|Año),
family = tweedie(link="log"),
data = relativos
)
# Medias estimadas de DMR por Localidad
emm_loc <- emmeans(modelo_loc, ~ Localidad)
# Comparaciones post hoc con letras
cld_loc <- multcomp::cld(emm_loc, Letters = letters, adjust = "tukey")
df_plot_loc <- as.data.frame(cld_loc)
# Paleta de colores (misma que antes, con tu modificación)
cols <- paletteer_d("ggthemes::excel_Depth")
cols_mod <- cols
cols_mod[2] <- cols[6]
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y = emmean, fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = emmean + 5),   # ajustá el +5 según escala de DMR
size = 5) +
scale_fill_manual(values = cols_mod) +
labs(
x = "Localidad",
y = "Densidad de inflorescencias (DMR, predicho)",
title = "Medias estimadas de DMR por localidad"
) +
theme_minimal()
## Hay dif entre localidades? # sin relativizar
# Modelo con Localidad como VE y Línea/Año como efectos aleatorios
modelo_loc <- glmmTMB(
DMR ~ Localidad+ (1|Línea) + (1|Año),
family = tweedie(link="log"),
data = relativos
)
res <- simulateResiduals(modelo_loc)
plot(res)
testDispersion(res)#  Test de sobredispersión
testZeroInflation(res)#  Test de cero-inflación (exceso de ceros)
# Medias estimadas
emm_loc <- emmeans(modelo_loc, ~ Localidad)
# Contraste con letras
cld_loc <- multcomp::cld(emm_loc, Letters = letters, adjust = "tukey")
cld_loc <- as.data.frame(cld_loc)  # contiene emmean y .group
# Obtenemos los intervalos de confianza
df_plot_loc <- as.data.frame(emm_loc)
df_plot_loc$.group <- cld_loc$.group  # agregamos las letras
# Paleta de colores
cols <- paletteer_d("ggthemes::excel_Depth")
cols_mod <- cols
cols_mod[2] <- cols[6]
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y = emmean, fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = emmean + 5), size = 5) +
scale_fill_manual(values = cols_mod) +
labs(
x = "Localidad",
y = "Densidad de inflorescencias (DMR, predicho)",
title = "Medias estimadas de DMR por localidad"
) +
theme_minimal()
# Medias estimadas
emm_loc <- emmeans(modelo_loc, ~ Localidad)
# Contraste con letras
cld_loc <- multcomp::cld(emm_loc, Letters = letters)
cld_loc <- as.data.frame(cld_loc)  # contiene emmean y .group
# Obtenemos los intervalos de confianza
df_plot_loc <- as.data.frame(emm_loc)
df_plot_loc$.group <- cld_loc$.group  # agregamos las letras
# Paleta de colores
cols <- paletteer_d("ggthemes::excel_Depth")
cols_mod <- cols
cols_mod[2] <- cols[6]
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y = emmean, fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = emmean + 5), size = 5) +
scale_fill_manual(values = cols_mod) +
labs(
x = "Localidad",
y = "Densidad de inflorescencias (DMR, predicho)",
title = "Medias estimadas de DMR por localidad"
) +
theme_minimal()
# Medias estimadas
emm_loc <- emmeans(modelo_loc, ~ Localidad)
# Obtenemos los intervalos de confianza
df_plot_loc <- as.data.frame(emm_loc)
df_plot_loc$.group <- cld_loc$.group  # agregamos las letras
# Paleta de colores
cols <- paletteer_d("ggthemes::excel_Depth")
cols_mod <- cols
cols_mod[2] <- cols[6]
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y = emmean, fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = emmean + 5), size = 5) +
scale_fill_manual(values = cols_mod) +
labs(
x = "Localidad",
y = "Densidad de inflorescencias (DMR, predicho)",
title = "Medias estimadas de DMR por localidad"
) +
theme_minimal()
summary(modelo_loc)
anova(modelo_loc)
Anova(modelo_loc)
car::Anova(modelo_loc)
# Medias estimadas
emm_loc <- emmeans(modelo_loc, ~ Localidad)
emm_loc
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y = emmean, fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = emmean + 5), size = 5) +
scale_fill_manual(values = cols_mod) +
labs(
x = "Localidad",
y = "Densidad de inflorescencias (DMR, predicho)",
title = "Medias estimadas de DMR por localidad"
) +
theme_minimal()
# Medias estimadas
emm_loc <- emmeans(modelo_loc, ~ Localidad, type = "response")
emm_loc
# Obtenemos los intervalos de confianza
df_plot_loc <- as.data.frame(emm_loc)
df_plot_loc$.group <- cld_loc$.group  # agregamos las letras
# Paleta de colores
cols <- paletteer_d("ggthemes::excel_Depth")
cols_mod <- cols
cols_mod[2] <- cols[6]
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y = emmean, fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = emmean + 5), size = 5) +
scale_fill_manual(values = cols_mod) +
labs(
x = "Localidad",
y = "Densidad de inflorescencias (DMR, predicho)",
title = "Medias estimadas de DMR por localidad"
) +
theme_minimal()
# Medias estimadas
emm_loc <- emmeans(modelo_loc, ~ Localidad, type = "response")
emm_loc
# Obtenemos los intervalos de confianza
df_plot_loc <- as.data.frame(emm_loc)
df_plot_loc$.group <- cld_loc$.group  # agregamos las letras
# Paleta de colores
cols <- paletteer_d("ggthemes::excel_Depth")
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y = response , fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = emmean + 5), size = 5) +
scale_fill_manual(values = cols_mod) +
labs(
x = "Localidad",
y = "Densidad de inflorescencias (DMR, predicho)",
title = "Medias estimadas de DMR por localidad"
) +
theme_minimal()
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y = response , fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = response  + 5), size = 5) +
scale_fill_manual(values = cols_mod) +
labs(
x = "Localidad",
y = "Densidad de inflorescencias (DMR, predicho)",
title = "Medias estimadas de DMR por localidad"
) +
theme_minimal()
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y = response , fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = response  + 2), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
scale_fill_manual(values = cols_mod) +
scale_y_continuous(limits = c(0, 2)) +  # ajusta según rango real
labs(
x = "Localidad",
y = "Densidad de inflorescencias (DMR, predicho)",
title = "Medias estimadas de DMR por localidad"
) +
theme_minimal()
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y = response , fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = response  + 1), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
scale_fill_manual(values = cols_mod) +
scale_y_continuous(limits = c(0, 2)) +  # ajusta según rango real
labs(
x = "Localidad",
y = "Densidad de inflorescencias (DMR, predicho)",
title = "Medias estimadas de DMR por localidad"
) +
theme_minimal()
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y = response , fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = response  + 1), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
scale_fill_manual(values = cols_mod) +
scale_y_continuous(limits = c(0, 2)) +  # ajusta según rango real
labs(
x = "Localidad",
y = "Densidad de inflorescencias (DMR, predicho)",
title = "Medias estimadas de DMR por localidad"
) +
theme_minimal()
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y = response , fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = response  + 2), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
scale_fill_manual(values = cols_mod) +
scale_y_continuous(limits = c(0, 1)) +  # ajusta según rango real
labs(
x = "Localidad",
y = "Densidad de inflorescencias (DMR, predicho)",
title = "Medias estimadas de DMR por localidad"
) +
theme_minimal()
res <- simulateResiduals(modelo_loc)
plot(res)
testDispersion(res)#  Test de sobredispersión
testZeroInflation(res)#  Test de cero-inflación (exceso de ceros)
summary(modelo_loc)
emm_loc
car::Anova(modelo_loc) # Localidad 43.679  3  1.765e-09 ***
########## SEMILLLAS ###############
library(dplyr)
library(purrr)
library(ggplot2)
library(MuMIn)
library(tidyr)
library(tidyverse)
library(broom)
library(lme4)
library(scales)
library(glmmTMB)
library(DHARMa)
library(emmeans)
library(readxl)
library(lmerTest)
library(ggplot2)
library(paletteer)
library(emmeans)
library(multcomp)
library(multcompView)
# Paleta de colores
cols <- paletteer_d("ggthemes::excel_Depth")
cols_mod <- cols
cols_mod[2] <- cols[6]
#  5.	DMR
"Medio que ya lo hicimos antes, habria q ver de encarar huntas las preguntas y despues ir al detalle y ya",
)
#Macollos
ggplot(crudos, aes(x = Línea, y = DMT, fill = Localidad)) +
geom_boxplot(position = position_dodge(width = 0.8)) +
labs(y = "DMT",
x = "Línea",
title = "Macollos por metro") +
theme_bw()
str(crudos)
datos_ratio <- crudos %>%
mutate(Macollos_por_pl = DMT / `Pl/m`)
ggplot(datos_ratio, aes(x = Línea, y = Macollos_por_pl, fill = Localidad)) +
geom_boxplot(position = position_dodge(width = 0.8)) +
labs(y = "Macollos por plántula (DMT / Pl_m)",
x = "Línea",
title = "Relación DMT/Plántulas por Línea y Localidad") +
theme_bw()
#Cuantos son reproductivos#
ggplot(datos_ratio, aes(x = Línea, y = `%MR`, fill = Localidad)) +
geom_boxplot(position = position_dodge(width = 0.8)) +
labs(y = "% Macollosreproductivos",
x = "Línea",
title = "% Macollos reproductivos por Línea y Localidad") +
theme_bw()
#####                    MODELOS DMR                                    #######
## Hay dif sig entre lineas? #sin relastivizar ####
DMR_Linea <- lmer(DMR ~ Línea + (1|Localidad) + (1|Año), data = crudos) #ziformula porque hay tantos 0 que rompe poisson y nbinom2 porque poisson no se banca el darma
#supuestos
res <- simulateResiduals(DMR_Linea)
plot(res)
testDispersion(res)#  Test de sobredispersión
testZeroInflation(res)#  Test de cero-inflación (exceso de ceros)
summary(DMR_Linea)
anova(DMR_Linea)  #Si
emm_lineas <- emmeans(DMR_Linea, ~ Línea) #contraste
pairs(emm_lineas, adjust = "tukey") #J7-L37 y J7-UF93
#grafiquito
emm_lineas <- emmeans(DMR_Linea, ~ Línea) # Medias estimadas de DMR por Línea
cld_lineas <- multcomp::cld(emm_lineas, Letters = letters, adjust = "tukey")
df_plot <- as.data.frame(cld_lineas)
ggplot(df_plot, aes(x = Línea, y = emmean, fill = Línea)) + geom_col(color = "black") + geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = emmean + 5),   # ajustá el +5 según escala de DMR
size = 5) +
scale_fill_manual(values = cols_mod) +
labs(
x = "Línea",
y = "Densidad de inflorescencias (DMR, predicho)",
title = "Medias estimadas de DMR por línea"
) +
theme_minimal(base_size = 13)
## RELATIVIZADO A CANTIDAD DE PLANTULAS ####
REL_DMR_Linea <- lmer(DMR ~ Línea + (1|Localidad) + (1|Año), data = relativos) ##Cambiar poner poison!
summary(REL_DMR_Linea)
anova(REL_DMR_Linea)  #Si
Remm_lineas <- emmeans(REL_DMR_Linea, ~ Línea) #contraste
pairs(Remm_lineas, adjust = "tukey") #J7-L37 y J7-UF93 de pedo se mantienen las dif. la k14-L37 en este caso es MARGINAL en el caso anterior no
Remm_lineas <- emmeans(REL_DMR_Linea, ~ Línea) # Medias estimadas de DMR por Línea
#Rcld_lineas <- cld(Remm_lineas, Letters = letters, adjust = "tukey")
Rdf_plot <- as.data.frame(Remm_lineas)
ggplot(Rdf_plot, aes(x = Línea, y = emmean, fill = Línea)) + geom_col(color = "black") + geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
#geom_text(aes(label = .group, y = emmean + 5),   # ajustá el +5 según escala de DMR
#          size = 5) +
scale_fill_manual(values = cols_mod) +
labs(
x = "Línea",
y = "Densidad de inflorescencias relativizado a la cantidad de plantulas",
title = "Medias estimadas de DMR" ) + theme_minimal(base_size = 13)
## Hay dif entre localidades? # sin relativizar
# Modelo con Localidad como VE y Línea/Año como efectos aleatorios
modelo_loc <- glmmTMB(
DMR ~ Localidad+ (1|Línea) + (1|Año),
family = tweedie(link="log"),
data = relativos
)
res <- simulateResiduals(modelo_loc)
plot(res)
testDispersion(res)#  Test de sobredispersión
testZeroInflation(res)#  Test de cero-inflación (exceso de ceros)
summary(modelo_loc)
car::Anova(modelo_loc) # Localidad 43.679  3  1.765e-09 ***
########### Falta tukey ####
# Medias estimadas
emm_loc <- emmeans(modelo_loc, ~ Localidad, type = "response")
emm_loc
# Obtenemos los intervalos de confianza
df_plot_loc <- as.data.frame(emm_loc)
df_plot_loc$.group <- cld_loc$.group  # agregamos las letras
# Paleta de colores
cols <- paletteer_d("ggthemes::excel_Depth")
cols_mod <- cols
cols_mod[2] <- cols[6]
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y = response , fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = response  + 2), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
scale_fill_manual(values = cols_mod) +
scale_y_continuous(limits = c(0, 1)) +  # ajusta según rango real
labs(
x = "Localidad",
y = "Densidad de inflorescencias (DMR, predicho)",
title = "Medias estimadas de DMR por localidad"
) +
theme_minimal()
library(glmmTMB)
modelo_GEI <- glmmTMB(
DMR ~ Localidad*Línea + (1|Año),
family = tweedie(link="log"),
data = relativos
)
res <- simulateResiduals(modelo_GEI)
plot(res)
testDispersion(res)#  Test de sobredispersión
testZeroInflation(res)#  Test de cero-inflación (exceso de ceros)
# Medias estimadas de DMR por Localidad
emm_GEI <- emmeans(modelo_GEI, ~ Localidad)
summary(modelo_GEI)
anova(modelo_GEI)  #Si
#contraste
tukey_loc <- pairs(emm_loc, adjust = "tukey")
## Hay dif entre localidades? # sin relativizar
# Modelo con Localidad como VE y Línea/Año como efectos aleatorios
modelo_loc <- glmmTMB(
DMR ~ Localidad+ (1|Línea) + (1|Año),
family = tweedie(link="log"),
data = relativos
)
res <- simulateResiduals(modelo_loc)
plot(res)
testDispersion(res)#  Test de sobredispersión
testZeroInflation(res)#  Test de cero-inflación (exceso de ceros)
summary(modelo_loc)
car::Anova(modelo_loc) # Localidad 43.679  3  1.765e-09 ***
#contraste
tukey_loc <- pairs(emm_loc, adjust = "tukey")
tukey_loc
tukey_loc
