library(broom)
library(lme4)
library(scales)
library(glmmTMB)
library(DHARMa)
library(emmeans)
library(readxl)
library(lmerTest)
library(ggplot2)
library(paletteer)
library(emmeans)
library(multcomp)
library(multcompView)
# Paleta de colores
cols <- paletteer_d("ggthemes::excel_Depth")
cols_mod <- cols
cols_mod[2] <- cols[6]
#  5.	DMR
"Medio que ya lo hicimos antes, habria q ver de encarar huntas las preguntas y despues ir al detalle y ya",
)
#Macollos
ggplot(crudos, aes(x = Línea, y = DMT, fill = Localidad)) +
geom_boxplot(position = position_dodge(width = 0.8)) +
labs(y = "DMT",
x = "Línea",
title = "Macollos por metro") +
theme_bw()
str(crudos)
datos_ratio <- crudos %>%
mutate(Macollos_por_pl = DMT / `Pl/m`)
ggplot(datos_ratio, aes(x = Línea, y = Macollos_por_pl, fill = Localidad)) +
geom_boxplot(position = position_dodge(width = 0.8)) +
labs(y = "Macollos por plántula (DMT / Pl_m)",
x = "Línea",
title = "Relación DMT/Plántulas por Línea y Localidad") +
theme_bw()
#Cuantos son reproductivos#
ggplot(datos_ratio, aes(x = Línea, y = `%MR`, fill = Localidad)) +
geom_boxplot(position = position_dodge(width = 0.8)) +
labs(y = "% Macollosreproductivos",
x = "Línea",
title = "% Macollos reproductivos por Línea y Localidad") +
theme_bw()
#####                    MODELOS DMR                                    #######
## Hay dif sig entre lineas? #sin relastivizar ####
DMR_Linea <- lmer(DMR ~ Línea + (1|Localidad) + (1|Año), data = crudos) #ziformula porque hay tantos 0 que rompe poisson y nbinom2 porque poisson no se banca el darma
#supuestos
res <- simulateResiduals(DMR_Linea)
plot(res)
testDispersion(res)#  Test de sobredispersión
testZeroInflation(res)#  Test de cero-inflación (exceso de ceros)
summary(DMR_Linea)
anova(DMR_Linea)  #Si
emm_lineas <- emmeans(DMR_Linea, ~ Línea) #contraste
pairs(emm_lineas, adjust = "tukey") #J7-L37 y J7-UF93
#grafiquito
emm_lineas <- emmeans(DMR_Linea, ~ Línea) # Medias estimadas de DMR por Línea
cld_lineas <- multcomp::cld(emm_lineas, Letters = letters, adjust = "tukey")
df_plot <- as.data.frame(cld_lineas)
ggplot(df_plot, aes(x = Línea, y = emmean, fill = Línea)) + geom_col(color = "black") + geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = emmean + 5),   # ajustá el +5 según escala de DMR
size = 5) +
scale_fill_manual(values = cols_mod) +
labs(
x = "Línea",
y = "Densidad de inflorescencias (DMR, predicho)",
title = "Medias estimadas de DMR por línea"
) +
theme_minimal(base_size = 13)
## RELATIVIZADO A CANTIDAD DE PLANTULAS ####
REL_DMR_Linea <- lmer(DMR ~ Línea + (1|Localidad) + (1|Año), data = relativos) ##Cambiar poner poison!
summary(REL_DMR_Linea)
anova(REL_DMR_Linea)  #Si
Remm_lineas <- emmeans(REL_DMR_Linea, ~ Línea) #contraste
pairs(Remm_lineas, adjust = "tukey") #J7-L37 y J7-UF93 de pedo se mantienen las dif. la k14-L37 en este caso es MARGINAL en el caso anterior no
Remm_lineas <- emmeans(REL_DMR_Linea, ~ Línea) # Medias estimadas de DMR por Línea
#Rcld_lineas <- cld(Remm_lineas, Letters = letters, adjust = "tukey")
Rdf_plot <- as.data.frame(Remm_lineas)
ggplot(Rdf_plot, aes(x = Línea, y = emmean, fill = Línea)) + geom_col(color = "black") + geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
#geom_text(aes(label = .group, y = emmean + 5),   # ajustá el +5 según escala de DMR
#          size = 5) +
scale_fill_manual(values = cols_mod) +
labs(
x = "Línea",
y = "Densidad de inflorescencias relativizado a la cantidad de plantulas",
title = "Medias estimadas de DMR" ) + theme_minimal(base_size = 13)
## Hay dif entre localidades? # sin relativizar
# Modelo con Localidad como VE y Línea/Año como efectos aleatorios
modelo_loc <- glmmTMB(
DMR ~ Localidad+ (1|Línea) + (1|Año),
family = tweedie(link="log"),
data = relativos
)
res <- simulateResiduals(modelo_loc)
plot(res)
testDispersion(res)#  Test de sobredispersión
testZeroInflation(res)#  Test de cero-inflación (exceso de ceros)
summary(modelo_loc)
car::Anova(modelo_loc) # Localidad 43.679  3  1.765e-09 ***
########### Falta tukey ####
# Medias estimadas
emm_loc <- emmeans(modelo_loc, ~ Localidad, type = "response")
emm_loc
# Obtenemos los intervalos de confianza
df_plot_loc <- as.data.frame(emm_loc)
df_plot_loc$.group <- cld_loc$.group  # agregamos las letras
# Paleta de colores
cols <- paletteer_d("ggthemes::excel_Depth")
cols_mod <- cols
cols_mod[2] <- cols[6]
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y = response , fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = response  + 2), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
scale_fill_manual(values = cols_mod) +
scale_y_continuous(limits = c(0, 1)) +  # ajusta según rango real
labs(
x = "Localidad",
y = "Densidad de inflorescencias (DMR, predicho)",
title = "Medias estimadas de DMR por localidad"
) +
theme_minimal()
library(glmmTMB)
modelo_GEI <- glmmTMB(
DMR ~ Localidad*Línea + (1|Año),
family = tweedie(link="log"),
data = relativos
)
res <- simulateResiduals(modelo_GEI)
plot(res)
testDispersion(res)#  Test de sobredispersión
testZeroInflation(res)#  Test de cero-inflación (exceso de ceros)
# Medias estimadas de DMR por Localidad
emm_GEI <- emmeans(modelo_GEI, ~ Localidad)
summary(modelo_GEI)
anova(modelo_GEI)  #Si
#contraste
tukey_loc <- pairs(emm_loc, adjust = "tukey")
## Hay dif entre localidades? # sin relativizar
# Modelo con Localidad como VE y Línea/Año como efectos aleatorios
modelo_loc <- glmmTMB(
DMR ~ Localidad+ (1|Línea) + (1|Año),
family = tweedie(link="log"),
data = relativos
)
res <- simulateResiduals(modelo_loc)
plot(res)
testDispersion(res)#  Test de sobredispersión
testZeroInflation(res)#  Test de cero-inflación (exceso de ceros)
summary(modelo_loc)
car::Anova(modelo_loc) # Localidad 43.679  3  1.765e-09 ***
#contraste
tukey_loc <- pairs(emm_loc, adjust = "tukey")
tukey_loc
tukey_loc
## Linea temporal
# Pivotar las columnas de días a PF a formato largo
library(dplyr)
library(tidyr)
library(ggplot2)
medidas_repetidas <- read_excel(
path = "CJB_Datos concurso jovenes de bioestadistica.xlsx",
sheet = "Medidas repetidas en el tiempo"
)
str(medidas_repetidas)
#Grafico
ggplot(medidas_repetidas,
aes(x = tiempo, y = PF.d, color = Localidad, group = interaction(Localidad, Línea, Bloque))) +
stat_summary(aes(group = Localidad),
fun = mean, geom = "line", size = 1.5) + # línea de la media por localidad
labs(
x = "Tiempo (días)",
y = "Producción por día (PF.d)",
color = "Localidad"
) +
theme_minimal(base_size = 14)
resumen <- medidas_repetidas %>%
group_by(Localidad, Línea, tiempo) %>%
summarise(
media = mean(PF, na.rm = TRUE),
sd = sd(PF, na.rm = TRUE),
n = n()
) %>%
mutate(
se = sd / sqrt(n),
IC_inf = media - qt(0.975, df = n-1) * se,
IC_sup = media + qt(0.975, df = n-1) * se
)
ggplot(resumen, aes(x = tiempo, y = media, color = Línea, group = Línea)) +
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = IC_inf, ymax = IC_sup), width = 0.2) +
facet_wrap(~ Localidad) +
theme_minimal()
#### Modelo ###
library(lme4)
medidas_repetidas <- read_excel(
path = "CJB_Datos concurso jovenes de bioestadistica.xlsx",
sheet = "Medidas repetidas en el tiempo"
)
str(medidas_repetidas)
crudos <- read_excel("CJB_Datos concurso jovenes de bioestadistica.xlsx")
library(readxl)
medidas_repetidas <- read_excel(
path = "CJB_Datos concurso jovenes de bioestadistica.xlsx",
sheet = "Medidas repetidas en el tiempo"
)
str(medidas_repetidas)
#Grafico
ggplot(medidas_repetidas,
aes(x = tiempo, y = PF.d, color = Localidad, group = interaction(Localidad, Línea, Bloque))) +
stat_summary(aes(group = Localidad),
fun = mean, geom = "line", size = 1.5) + # línea de la media por localidad
labs(
x = "Tiempo (días)",
y = "Producción por día (PF.d)",
color = "Localidad"
) +
theme_minimal(base_size = 14)
summary(medidas_repetidas)
resumen <- medidas_repetidas %>%
group_by(Localidad, Línea, tiempo) %>%
summarise(
media = mean(PF, na.rm = TRUE),
sd = sd(PF, na.rm = TRUE),
n = n()
) %>%
mutate(
se = sd / sqrt(n),
IC_inf = media - qt(0.975, df = n-1) * se,
IC_sup = media + qt(0.975, df = n-1) * se
)
ggplot(resumen, aes(x = tiempo, y = media, color = Línea, group = Línea)) +
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = IC_inf, ymax = IC_sup), width = 0.2) +
facet_wrap(~ Localidad) +
theme_minimal()
#### Modelo ###
library(lme4)
library(lmerTest)  # para p-valores
modelo <- lmer(PF.d ~ Localidad*tiempo + (1|Bloque/Línea), data = medidas_repetidas)
summary(modelo)
anova(modelo)
#Grafico
ggplot(medidas_repetidas,
aes(x = tiempo, y = PF.d, color = Localidad, group = interaction(Localidad, Línea, Bloque))) +
stat_summary(aes(group = Localidad),
fun = mean, geom = "line", size = 1.5) + # línea de la media por localidad
labs(
x = "Tiempo (días)",
y = "Producción por día (PF.d)",
color = "Localidad"
) +
theme_minimal(base_size = 14)
resumen <- medidas_repetidas %>%
group_by(Localidad, Línea, tiempo) %>%
summarise(
media = mean(PF, na.rm = TRUE),
sd = sd(PF, na.rm = TRUE),
n = n()
) %>%
mutate(
se = sd / sqrt(n),
IC_inf = media - qt(0.975, df = n-1) * se,
IC_sup = media + qt(0.975, df = n-1) * se
)
ggplot(resumen, aes(x = tiempo, y = media, color = Línea, group = Línea)) +
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = IC_inf, ymax = IC_sup), width = 0.2) +
facet_wrap(~ Localidad) +
theme_minimal()
modelo <- lmer(PF.d ~ Localidad*tiempo + (1|Bloque/Línea), data = medidas_repetidas)
summary(modelo)
anova(modelo)
summary(medidas_repetidas)
str(medidas_repetidas)
modelo <- lmer(PF.d ~ Localidad*tiempo + (1|Bloque/Línea), data = medidas_repetidas)
library(dplyr)
library(purrr)
library(ggplot2)
library(MuMIn)
library(tidyr)
library(tidyverse)
library(broom)
library(lme4)
library(scales)
library(glmmTMB)
library(DHARMa)
library(emmeans)
library(readxl)
########## SEMILLLAS ###############
library(dplyr)
library(purrr)
library(ggplot2)
library(MuMIn)
library(tidyr)
library(tidyverse)
library(broom)
library(lme4)
library(scales)
library(glmmTMB)
library(DHARMa)
library(emmeans)
library(readxl)
library(lmerTest)
library(ggplot2)
library(paletteer)
library(emmeans)
library(multcomp)
library(multcompView)
## Linea temporal
# Pivotar las columnas de días a PF a formato largo
library(dplyr)
library(tidyr)
library(ggplot2)
cols <- paletteer_d("ggthemes::excel_Depth")
cols_mod <- cols
cols_mod[2] <- cols[6]
medidas_repetidas <- read_excel(
path = "CJB_Datos concurso jovenes de bioestadistica.xlsx",
sheet = "Medidas repetidas en el tiempo"
)
summary(medidas_repetidas)
str(medidas_repetidas)
summary(relativos$`TC.d 1`)
summary(relativos$`TC.d 2`)
summary(relativos$`TC.d 3`)
summary(relativos$`TC.d 4`)
#Grafico
ggplot(medidas_repetidas,
aes(x = tiempo, y = PF.d, color = Localidad, group = interaction(Localidad, Línea, Bloque))) +
stat_summary(aes(group = Localidad),
fun = mean, geom = "line", size = 1.5) + # línea de la media por localidad
labs(
x = "Tiempo (días)",
y = "Producción por día (PF.d)",
color = "Localidad"
) +
theme_minimal(base_size = 14)
resumen <- medidas_repetidas %>%
group_by(Localidad, Línea, tiempo) %>%
summarise(
media = mean(PF, na.rm = TRUE),
sd = sd(PF, na.rm = TRUE),
n = n()
) %>%
mutate(
se = sd / sqrt(n),
IC_inf = media - qt(0.975, df = n-1) * se,
IC_sup = media + qt(0.975, df = n-1) * se
)
ggplot(resumen, aes(x = tiempo, y = media, color = Línea, group = Línea)) +
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = IC_inf, ymax = IC_sup), width = 0.2) +
facet_wrap(~ Localidad) +
theme_minimal()
#### Modelo ###
library(lme4)
library(lmerTest)  # para p-valores
modelo <- lmer(PF.d ~ Localidad*tiempo + (1|Bloque/Línea), data = medidas_repetidas)
summary(modelo)
anova(modelo)
modelo <- lmer(PF.d ~ Localidad*tiempo*Línea + (1|Bloque), data = medidas_repetidas)
summary(modelo)
anova(modelo)
medidas_repetidas$Bloque<- as.factor(medidas_repetidas$Bloque)
summary(medidas_repetidas)
medidas_repetidas$Bloque<- as.factor(medidas_repetidas$Bloque)
summary(medidas_repetidas)
str(medidas_repetidas)
#Relativos
# 1) Tomamos como referencia la densidad de plantas (Pl/m) de 23-24
plantas_ref <- medidas_repetidas %>%
filter(Año == "23-24") %>%
group_by(Localidad, Línea, Bloque) %>%
summarise(Pl_m_ref = mean(`Pl/m`, na.rm = TRUE), .groups = "drop")
# 2) Creamos la base 'relativos'
medidas_repetidas_Rel <-medidas_repetidas %>%
left_join(plantas_ref, by = c("Localidad", "Línea", "Bloque")) %>%
mutate(
# usamos siempre Pl/m de 23-24 como denominador
Pl_m_usada = ifelse(Año == "24-25", Pl_m_ref, `Pl/m`)
) %>%
# 3) Dividimos todas las variables numéricas (excepto Pl/m y las auxiliares)
mutate(across(
where(is.numeric) & !c("Pl/m","Pl_m_ref","Pl_m_usada", "tiempo"),
~ .x / Pl_m_usada
))
View(medidas_repetidas)
#Relativos
# 1) Tomamos como referencia la densidad de plantas (Pl/m) de 23-24
plantas_ref <- crudos %>%
filter(Año == "23-24") %>%
group_by(Localidad, Línea, Bloque) %>%
summarise(Pl_m_ref = mean(`Pl/m`, na.rm = TRUE), .groups = "drop")
# 2) Creamos la base 'relativos'
medidas_repetidas_Rel <-medidas_repetidas %>%
left_join(plantas_ref, by = c("Localidad", "Línea", "Bloque")) %>%
mutate(
# usamos siempre Pl/m de 23-24 como denominador
Pl_m_usada = ifelse(Año == "24-25", Pl_m_ref, `Pl/m`)
) %>%
# 3) Dividimos todas las variables numéricas (excepto Pl/m y las auxiliares)
mutate(across(
where(is.numeric) & !c("Pl/m","Pl_m_ref","Pl_m_usada", "tiempo"),
~ .x / Pl_m_usada
))
#Relativos
# 1) Tomamos como referencia la densidad de plantas (Pl/m) de 23-24
plantas_ref <- crudos %>%
filter(Año == "23-24") %>%
group_by(Localidad, Línea, Bloque) %>%
summarise(Pl_m_ref = mean(`Pl/m`, na.rm = TRUE), .groups = "drop")
# 2) Creamos la base 'relativos'
medidas_repetidas_Rel <-medidas_repetidas %>%
left_join(plantas_ref, by = c("Localidad", "Línea", "Bloque")) %>%
mutate(
# usamos siempre Pl/m de 23-24 como denominador
Pl_m_usada =  Pl_m_ref
) %>%
# 3) Dividimos todas las variables numéricas (excepto Pl/m y las auxiliares)
mutate(across(
where(is.numeric) & !c("Pl/m","Pl_m_ref","Pl_m_usada", "tiempo"),
~ .x / Pl_m_usada
))
#Relativos
# 1) Tomamos como referencia la densidad de plantas (Pl/m) de 23-24
plantas_ref <- crudos %>%
filter(Año == "23-24") %>%
group_by(Localidad, Línea, Bloque) %>%
summarise(Pl_m_ref = mean(`Pl/m`, na.rm = TRUE), .groups = "drop")
# 2) Creamos la base 'relativos'
medidas_repetidas_Rel <-medidas_repetidas %>%
left_join(plantas_ref, by = c("Localidad", "Línea", "Bloque")) %>%
mutate(
# usamos siempre Pl/m de 23-24 como denominador
Pl_m_usada =  Pl_m_ref
) %>%
# 3) Dividimos todas las variables numéricas (excepto Pl/m y las auxiliares)
mutate(across(
where(is.numeric) & !c("Pl_m_ref","Pl_m_usada", "tiempo"),
~ .x / Pl_m_usada
))
View(medidas_repetidas_Rel)
M_PDias <- lmer(PF.d ~ Localidad*tiempo*Línea + (1|Bloque), data = medidas_repetidas_Rel)
summary(M_PDias)
M_PDias <- lmer(PF.d ~ Localidad*tiempo*Línea + (1|Bloque), data = medidas_repetidas_Rel)
M_PDias <- lmer(PF.d ~ Localidad*tiempo*Línea + (1|Bloque), data = medidas_repetidas_Rel)
M_PDias <- lmer(PF.d ~ Localidad*tiempo*Línea + (1|Bloque), data = medidas_repetidas_Rel)
str(medidas_repetidas_Rel$tiempo)
M_PDias <- lmer(PF.d ~ Localidad*tiempo + Línea*tiempo +  + (1|Bloque), data = medidas_repetidas_Rel)
medidas_repetidas$Línea<- as.factor(medidas_repetidas$Línea)
medidas_repetidas$Localidad<- as.factor(medidas_repetidas$Localidad)
summary(medidas_repetidas)
str(medidas_repetidas)
medidas_repetidas$Corte<- as.factor(medidas_repetidas$Corte)
summary(medidas_repetidas)
str(medidas_repetidas)
#Relativos
# 1) Tomamos como referencia la densidad de plantas (Pl/m) de 23-24
plantas_ref <- crudos %>%
filter(Año == "23-24") %>%
group_by(Localidad, Línea, Bloque) %>%
summarise(Pl_m_ref = mean(`Pl/m`, na.rm = TRUE), .groups = "drop")
medidas_repetidas$Corte<- as.factor(medidas_repetidas$Corte)
summary(medidas_repetidas)
str(medidas_repetidas)
#Relativos
# 1) Tomamos como referencia la densidad de plantas (Pl/m) de 23-24
plantas_ref <- crudos %>%
filter(Año == "23-24") %>%
group_by(Localidad, Línea, Bloque) %>%
summarise(Pl_m_ref = mean(`Pl/m`, na.rm = TRUE), .groups = "drop")
# 2) Creamos la base 'relativos'
medidas_repetidas_Rel <-medidas_repetidas %>%
left_join(plantas_ref, by = c("Localidad", "Línea", "Bloque")) %>%
mutate(
# usamos siempre Pl/m de 23-24 como denominador
Pl_m_usada =  Pl_m_ref
) %>%
# 3) Dividimos todas las variables numéricas (excepto Pl/m y las auxiliares)
mutate(across(
where(is.numeric) & !c("Pl_m_ref","Pl_m_usada", "tiempo"),
~ .x / Pl_m_usada
))
medidas_repetidas_Rel$tiempo
str(medidas_repetidas_Rel)
#Grafico
ggplot(medidas_repetidas,
aes(x = tiempo, y = PF.d, color = Localidad, group = interaction(Localidad, Línea, Bloque))) +
stat_summary(aes(group = Localidad),
fun = mean, geom = "line", size = 1.5) + # línea de la media por localidad
labs(
x = "Tiempo (días)",
y = "Producción por día (PF.d)",
color = "Localidad"
) +
theme_minimal(base_size = 14)
M_PDias <- lmer(PF.d ~ Localidad*tiempo + Línea*tiempo +  + (1|Bloque), data = medidas_repetidas_Rel)
summary(M_PDias)
M_PDias <- glmer(PF.d ~ Localidad*tiempo + Línea*tiempo +  + (1|Bloque), data = medidas_repetidas_Rel)
M_PDias <- glmer(PF.d ~ Localidad*tiempo*Línea +  + (1|Bloque), data = medidas_repetidas_Rel)
M_PDias <- glmer(PF.d ~ Localidad*tiempo*Línea + (1|Bloque), data = medidas_repetidas_Rel)
M_PDias <- glmer(PF.d ~ Localidad*tiempo*Línea + (1|Bloque),family=gaussian , data = medidas_repetidas_Rel)
Dias <- glmer(PF.d ~ Localidad*tiempo*Línea + (1|Bloque),family=gaussian , data = medidas_repetidas_Rel)
