plot(res)
testDispersion(res)#  Test de sobredispersión
testZeroInflation(res)#  Test de cero-inflación (exceso de ceros)
summary(modelo_loc)
car::Anova(modelo_loc) # Localidad 43.679  3  1.765e-09 ***
#contraste
tukey_loc <- pairs(emm_loc, adjust = "tukey")
tukey_loc
# Medias estimadas
emm_loc <- emmeans(modelo_loc, ~ Localidad, type = "response")
emm_loc
# Obtenemos los intervalos de confianza
df_plot_loc <- as.data.frame(emm_loc)
str(df_plot_loc)
df_plot_loc$.group <- cld_loc$.group  # agregamos las letras
# Paleta de colores
cols <- paletteer_d("ggthemes::excel_Depth")
cols_mod <- cols
cols_mod[2] <- cols[6]
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y = response , fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = response  + 2), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
scale_fill_manual(values = cols_mod) +
scale_y_continuous(limits = c(0, 1)) +  # ajusta según rango real
labs(
x = "Localidad",
y = "Semillas llenas (Semillas llenas, predicho)",
title = "semillas llenas por planta"
) +
theme_minimal()
relativos_clean<-na.omit(relativos[, c("`Prod. S. llenas`", "Localidad", "Línea", "tiempo", "Bloque")])
relativos_clean<-na.omit(relativos[, c("`Prod. S. llenas`", "Localidad", "Línea", "Bloque")])
relativos_clean<-na.omit(relativos[, c(`Prod. S. llenas`, "Localidad", "Línea", "Bloque")])
relativos_clean<-na.omit(relativos[, c("Prod. S. llenas", "Localidad", "Línea", "Bloque")])
modelo_loc <- glmmTMB(
`Prod. S. llenas`~ Localidad *Línea + Año +(1|Bloque),
family = tweedie(link="log"),
data = relativos_clean)
relativos_clean<-na.omit(relativos[, c("Prod. S. llenas", "Localidad","Año" ,"Línea", "Bloque")])
modelo_loc <- glmmTMB(
`Prod. S. llenas`~ Localidad *Línea + Año +(1|Bloque),
family = tweedie(link="log"),
data = relativos_clean)
res <- simulateResiduals(modelo_loc)
plot(res)
testDispersion(res)#  Test de sobredispersión
testZeroInflation(res)#  Test de cero-inflación (exceso de ceros)
summary(modelo_loc)
car::Anova(modelo_loc) # Localidad 43.679  3  1.765e-09 ***
#contraste
tukey_loc <- pairs(emm_loc, adjust = "tukey")
tukey_loc
# Medias estimadas
emm_loc <- emmeans(modelo_loc, ~ Localidad, type = "response")
emm_loc
summary(modelo_loc)
View(crudos)
## Hay dif entre localidades? # sin relativizar
# Modelo con Localidad como VE y Línea/Año como efectos aleatorios
modelo_loc <- glmmTMB(
DMR ~ Localidad *Línea + Año +(1|Bloque),
family = tweedie(link="log"),
data = relativos_clean)
modelo_loc <- glmmTMB(
DMR ~ Localidad *Línea + Año +(1|Bloque),
family = gaussian,
data = relativos_clean)
modelo_loc <- glmmTMB(
`Prod. S. llenas`~ Localidad *Línea + Año +(1|Bloque),
family = gaussian,
data = relativos_clean)
res <- simulateResiduals(modelo_loc)
plot(res)
modelo_loc <- glmmTMB(
`Prod. S. llenas`~ Localidad *Línea + Año +(1|Bloque),
family = Gamma (link = "log"),
data = relativos_clean)
modelo_loc <- glmmTMB(
`Prod. S. llenas`~ Localidad *Línea + Año +(1|Bloque),
family = gamma (link = "log"),
data = relativos_clean)
modelo_loc <- glmmTMB(
`Prod. S. llenas`~ Localidad *Línea + Año +(1|Bloque),
family = gaussian,
data = relativos_clean)
res <- simulateResiduals(modelo_loc)
plot(res)
modelo_loc <- glmmTMB(
`Prod. S. llenas`~ Localidad *Línea + Año +(1|Bloque),
family = gaussian,
weights = varIdent(form = ~1 | Localidad),
data = relativos_clean)
modelo_loc <- lme(
fixed = `Prod. S. llenas` ~ Localidad * Línea + Año,
random = ~1 | Bloque,
weights = varIdent(form = ~1 | Localidad),
data = relativos_clean
)
modelo_loc <- lme(
fixed = `Prod. S. llenas` ~ Localidad * Línea + Año,
random = ~1 | Bloque,
weights = varIdent(form = ~1 | Localidad),
data = relativos_clean
)
modelo_loc <- lme(
fixed = (`Prod. S. llenas`) ~ Localidad * Línea + Año,
random = ~1 | Bloque,
weights = varIdent(form = ~1 | Localidad),
data = relativos_clean
)
modelo_loc <- lme(
fixed = `Prod. S. llenas` ~ Localidad * Línea + Año,
random = ~1 | Bloque,
weights = varIdent(form = ~1 | Localidad),
data = relativos
)
relativos$Prod_S_llenas <- relativos$`Prod. S. llenas`
modelo_loc <- lme(
fixed = Prod_S_llenas ~ Localidad * Línea + Año,
random = ~1 | Bloque,
weights = varIdent(form = ~1 | Localidad),
data = relativos
)
relativos_clean$Prod_S_llenas <- relativos_clean$`Prod. S. llenas`
modelo_loc <- lme(
fixed = Prod_S_llenas ~ Localidad * Línea + Año,
random = ~1 | Bloque,
weights = varIdent(form = ~1 | Localidad),
data = relativos_clean
)
modelo_loc <- glmmTMB(
`Prod. S. llenas`~ Localidad *Línea + Año +(1|Bloque),
family = gaussian,
dispformula = ~ Localidad,,
data = relativos_clean)
modelo_loc <- glmmTMB(
`Prod. S. llenas`~ Localidad *Línea + Año +(1|Bloque),
family = gaussian,
dispformula = ~ Localidad,
data = relativos_clean)
res <- simulateResiduals(modelo_loc)
plot(res)
modelo_loc <- glmmTMB(
`Prod. S. llenas`~ Localidad *Línea + Año +(1|Bloque),
family = gaussian,
dispformula = ~ Línea,
data = relativos_clean)
res <- simulateResiduals(modelo_loc)
plot(res)
modelo_loc <- glmmTMB(
`Prod. S. llenas`~ Localidad *Línea + Año +(1|Bloque),
family = gaussian,
dispformula = ~ Línea*Localidad,
data = relativos_clean)
res <- simulateResiduals(modelo_loc)
plot(res)
modelo_loc <- glmmTMB(
`Prod. S. llenas`~ Localidad *Línea + Año +(1|Bloque),
family = gaussian,
dispformula = ~ Línea,
data = relativos_clean)
res <- simulateResiduals(modelo_loc)
plot(res)
modelo_loc <- glmmTMB(
`Prod. S. llenas`~ Localidad *Línea + Año +(1|Bloque),
family = gaussian,
dispformula = ~ Línea+Año,
data = relativos_clean)
res <- simulateResiduals(modelo_loc)
plot(res)
modelo_loc <- glmmTMB(
`Prod. S. llenas`~ Localidad *Línea + Año +(1|Bloque),
family = gaussian,
dispformula = ~ Línea,
data = relativos_clean)
res <- simulateResiduals(modelo_loc)
plot(res)
testDispersion(res)#  Test de sobredispersión
testZeroInflation(res)#  Test de cero-inflación (exceso de ceros)
summary(modelo_loc)
car::Anova(modelo_loc) # Localidad 43.679  3  1.765e-09 ***
#contraste
tukey_loc <- pairs(emm_loc, adjust = "tukey")
tukey_loc
# Medias estimadas
emm_loc <- emmeans(modelo_loc, ~ Localidad, type = "response")
emm_loc
relativos_clean<-na.omit(crudos[, c("Prod. Sem", "Localidad","Año" ,"Línea", "Bloque", "Pl/m")])
relativos_clean$Prod_Sem_rel <- relativos_clean$`Prod. Sem`/ relativos_clean$`Pl/m`
str(relativos_clean)
relativos_clean$Localidad <- as.factor(relativos_clean$Localidad)
relativos_clean$Línea <- as.factor(relativos_clean$Línea)
relativos_clean$Año <- as.factor(relativos_clean$Año)
relativos_clean$Bloque <- as.factor(relativos_clean$Bloque)
modelo_loc <- glmmTMB(
Prod_Sem_rel~ Localidad *Línea + Año +(1|Bloque),
family = gaussian,
dispformula = ~ Línea*Año,
data = relativos_clean)
########## SEMILLLAS ###############
library(dplyr)
library(purrr)
library(ggplot2)
library(MuMIn)
library(tidyr)
library(tidyverse)
library(broom)
library(lme4)
library(scales)
library(glmmTMB)
library(DHARMa)
library(emmeans)
library(readxl)
library(lmerTest)
library(ggplot2)
library(paletteer)
library(emmeans)
library(multcomp)
library(multcompView)
relativos_clean<-na.omit(crudos[, c("Prod. Sem", "Localidad","Año" ,"Línea", "Bloque", "Pl/m")])
relativos_clean$Prod_Sem_rel <- relativos_clean$`Prod. Sem`/ relativos_clean$`Pl/m`
str(relativos_clean)
relativos_clean$Localidad <- as.factor(relativos_clean$Localidad)
relativos_clean$Línea <- as.factor(relativos_clean$Línea)
relativos_clean$Año <- as.factor(relativos_clean$Año)
relativos_clean$Bloque <- as.factor(relativos_clean$Bloque)
modelo_loc <- glmmTMB(
Prod_Sem_rel~ Localidad *Línea + Año +(1|Bloque),
family = gaussian,
dispformula = ~ Línea*Año,
data = relativos_clean)
res <- simulateResiduals(modelo_loc)
plot(res)
testDispersion(res)#  Test de sobredispersión
testZeroInflation(res)#  Test de cero-inflación (exceso de ceros)
summary(modelo_loc)
car::Anova(modelo_loc) # Localidad 43.679  3  1.765e-09 ***
#contraste
emm_loc <- emmeans(modelo_loc, ~ Localidad, type = "tukey")
tukey_loc <- pairs(emm_loc, adjust = "tukey")
tukey_loc
plot(emm_loc, comparison = T)
# Obtenemos los intervalos de confianza
df_plot_loc <- as.data.frame(emm_loc)
str(df_plot_loc)
cld_loc <- multcomp::cld(emm_loc, Letters = letters, adjust = "tukey")
df_plot_loc <- as.data.frame(cld_loc)
df_plot_loc
df_plot_loc$.group <- cld_loc$.group  # agregamos las letras
df_plot_loc
# Paleta de colores
cols <- paletteer_d("ggthemes::excel_Depth")
cols_mod <- cols
cols_mod[2] <- cols[6]
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y =  emmean  , fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y =  emmean+0.5), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
scale_fill_manual(values = cols_mod) +
scale_y_continuous(limits = c(0, 1)) +  # ajusta según rango real
labs(
x = "Localidad",
y = "Semillas (Semillas, predicho)",
title = "semillas por planta"
) +
theme_minimal()
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y =  emmean  , fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y =  emmean+0.2), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
scale_fill_manual(values = cols_mod) +
scale_y_continuous(limits = c(0, 0.5)) +  # ajusta según rango real
labs(
x = "Localidad",
y = "Semillas (Semillas, predicho)",
title = "semillas por planta"
) +
theme_minimal()
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y =  emmean  , fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y =  emmean+0.05), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
scale_fill_manual(values = cols_mod) +
scale_y_continuous(limits = c(0, 0.3)) +  # ajusta según rango real
labs(
x = "Localidad",
y = "Semillas (Semillas, predicho)",
title = "semillas por planta"
) +
theme_minimal()
#Por Línea
emm_loc <- emmeans(modelo_loc, ~ Línea, type = "response")
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y =  emmean  , fill = Localidad)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y =  emmean+0.05), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
scale_fill_manual(values = cols_mod) +
scale_y_continuous(limits = c(0, 0.2)) +  # ajusta según rango real
labs(
x = "Localidad",
y = "Semillas (Semillas, predicho)",
title = "semillas por planta"
) +
theme_minimal()
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y =  emmean)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y =  emmean+0.05), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
#scale_fill_manual(values = cols_mod) +
scale_y_continuous(limits = c(0, 0.2)) +  # ajusta según rango real
labs(
x = "Localidad",
y = "Semillas (Semillas, predicho)",
title = "semillas por planta"
) +
theme_minimal()
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y =  emmean)) +
geom_col(fill = cols_mod[1], color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y =  emmean+0.05), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
#scale_fill_manual(values = cols_mod) +
scale_y_continuous(limits = c(0, 0.2)) +  # ajusta según rango real
labs(
x = "Localidad",
y = "Semillas (Semillas, predicho)",
title = "semillas por planta"
) +
theme_minimal()
#contraste
emm_loc <- emmeans(modelo_loc, ~ Localidad, type = "response")
tukey_loc <- pairs(emm_loc, adjust = "response")
tukey_loc
plot(emm_loc, comparison = T)
# Obtenemos los intervalos de confianza
df_plot_loc <- as.data.frame(emm_loc)
str(df_plot_loc)
cld_loc <- multcomp::cld(emm_loc, Letters = letters, adjust = "response")
cld_loc <- multcomp::cld(emm_loc, Letters = letters, adjust = "sidak")
df_plot_loc <- as.data.frame(cld_loc)
df_plot_loc
df_plot_loc$.group <- cld_loc$.group  # agregamos las letras
df_plot_loc
# Paleta de colores
cols <- paletteer_d("ggthemes::excel_Depth")
cols_mod <- cols
cols_mod[2] <- cols[6]
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y =  emmean)) +
geom_col(fill = cols_mod[1], color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y =  emmean+0.05), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
#scale_fill_manual(values = cols_mod) +
scale_y_continuous(limits = c(0, 0.2)) +  # ajusta según rango real
labs(
x = "Localidad",
y = "Semillas (Semillas, predicho)",
title = "semillas por planta"
) +
theme_minimal()
#Por Línea
emm_loc <- emmeans(modelo_loc, ~ Línea, type = "response")
emm_loc
# Obtenemos los intervalos de confianza
df_plot_loc <- as.data.frame(emm_loc)
#Por Línea
emm_lin <- emmeans(modelo_loc, ~ Línea, type = "response")
emm_lin
# Obtenemos los intervalos de confianza
df_plot_lin <- as.data.frame(emm_lin)
str(df_plot_lin)
cld_lin <- multcomp::cld(emm_lin, Letters = letters, adjust = "sidak")
df_plot_lin$.group <- cld_lin$.group  # agregamos las letras
df_plot_lin
emm_lin
tukey_loc <- pairs(emm_lin, adjust = "response")
tukey_loc
#Por Línea
emm_lin <- emmeans(modelo_loc, ~ Línea, type = "tukey")
emm_lin
tukey_loc <- pairs(emm_lin, adjust = "tukey")
tukey_loc
# Obtenemos los intervalos de confianza
df_plot_lin <- as.data.frame(emm_lin)
str(df_plot_lin)
cld_lin <- multcomp::cld(emm_lin, Letters = letters, adjust = "sidak")
df_plot_lin$.group <- cld_lin$.group  # agregamos las letras
df_plot_lin
# Paleta de colores
cols <- paletteer_d("ggthemes::excel_Depth")
cols_mod <- cols
cols_mod[2] <- cols[6]
# Gráfico
ggplot(df_plot_lin, aes(x = Línea, y = emmean , fill = Línea)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = lower.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = emmean), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
scale_fill_manual(values = cols_mod) +
labs(
x = "Línea",
y =  "(Semillas, predicho)",
title = "Medias estimadas de Semillas por línea"
) +
theme_minimal()
# Gráfico
ggplot(df_plot_lin, aes(x = Línea, y = emmean , fill = Línea)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = emmean+0.02), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
scale_fill_manual(values = cols_mod) +
labs(
x = "Línea",
y =  "(Semillas, predicho)",
title = "Medias estimadas de Semillas por línea"
) +
theme_minimal()
# Gráfico
ggplot(df_plot_lin, aes(x = Línea, y = emmean , fill = Línea)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = emmean+0.03), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
scale_fill_manual(values = cols_mod) +
labs(
x = "Línea",
y =  "(Semillas, predicho)",
title = "Medias estimadas de Semillas por línea"
) +
theme_minimal()
# Gráfico
ggplot(df_plot_lin, aes(x = Línea, y = emmean , fill = Línea)) +
geom_col(color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y = emmean+0.03), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
scale_fill_manual(values = cols_mod) +
labs(
x = "Línea",
y =  "(Semillas, predicho)",
title = "Medias estimadas de Semillas por planta por línea"
) +
theme_minimal()
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y =  emmean)) +
geom_col(fill = cols_mod[1], color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y =  emmean+0.05), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
#scale_fill_manual(values = cols_mod) +
labs(
x = "Localidad",
y = "Semillas (Semillas, predicho)",
title = "semillas por planta"
) +
theme_minimal()
emm_loc <- emmeans(modelo_loc, ~ Localidad, type = "response")
tukey_loc <- pairs(emm_loc, adjust = "response")
tukey_loc
modelo_loc <- glmmTMB(
Prod_Sem_rel~ Localidad *Línea + Año +(1|Bloque),
family = gaussian,
dispformula = ~ Línea*Año,
data = relativos_clean)
res <- simulateResiduals(modelo_loc)
plot(res)
testDispersion(res)#  Test de sobredispersión
testZeroInflation(res)#  Test de cero-inflación (exceso de ceros)
summary(modelo_loc)
car::Anova(modelo_loc) # Localidad 43.679  3  1.765e-09 ***
#contraste
emm_loc <- emmeans(modelo_loc, ~ Localidad, type = "response")
tukey_loc <- pairs(emm_loc, adjust = "response")
tukey_loc
cld_loc <- multcomp::cld(emm_loc, Letters = letters, adjust = "sidak")
df_plot_loc <- as.data.frame(cld_loc)
df_plot_loc
df_plot_loc$.group <- cld_loc$.group  # agregamos las letras
df_plot_loc
# Paleta de colores
cols <- paletteer_d("ggthemes::excel_Depth")
cols_mod <- cols
cols_mod[2] <- cols[6]
# Gráfico
ggplot(df_plot_loc, aes(x = Localidad, y =  emmean)) +
geom_col(fill = cols_mod[1], color = "black") +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL),
width = 0.2, size = 0.8) +
geom_text(aes(label = .group, y =  emmean+0.05), size = 5) +  # ajusté +2 para que las letras queden dentro del eje
#scale_fill_manual(values = cols_mod) +
labs(
x = "Localidad",
y = "Semillas (Semillas, predicho)",
title = "semillas por planta"
) +
theme_minimal()
