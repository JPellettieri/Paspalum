) %>%
filter(!is.na(PF),
!Corte %in% c("Total", "total.°C", "total.mm", "total.d"))
ggplot(datos_largos, aes(x = Corte, y = PF, fill = Línea)) +
geom_boxplot(outlier.shape = NA, alpha = 0.7) +
facet_wrap(~Línea) +
theme_minimal() +
labs(y = "Producción de forraje (g MS/m)", x = "Corte")
#configuro los datos para hacer analisis exploratorios
datos_largos <- crudos %>%
pivot_longer(
cols = starts_with("PF "),
names_to = "Corte",
values_to = "PF",
names_pattern = "PF (.*)"
) %>%
filter(!is.na(PF),
!Corte %in% c("Total", "total.ºC", "total.mm", "total.d"))
ggplot(datos_largos, aes(x = Corte, y = PF, fill = Línea)) +
geom_boxplot(outlier.shape = NA, alpha = 0.7) +
facet_wrap(~Línea) +
theme_minimal() +
labs(y = "Producción de forraje (g MS/m)", x = "Corte")
ggplot(datos_largos, aes(x = Corte, y = PF, color = Línea, group = Línea)) +
stat_summary(fun = mean, geom = "line", size = 1) +
stat_summary(fun = mean, geom = "point", size = 2) +
theme_minimal() +
labs(y = "Producción de forraje (g MS/m)", x = "Corte")
####    VARIABLES  ####
#Hay una banda de variables muchas surgen de cuentas hechas a partir de otras, en el doc hay un glosario de variables
#A grandes razgos los aspectos q se evaluaron fueron:
#Pl/m: Plántulas por metro lineal de surco: Entiendo que se refiere a la cantidad de plantulas q se pusieron en un principio en cada sitio, en dicho caso tiene sentido que RELATIVICEMOS todos los resultados a la cantidad inicial de plantulas de cada sitio!
xtabs(~ Año + Localidad + Línea + Pl/m, data = crudos)
####    VARIABLES  ####
#Hay una banda de variables muchas surgen de cuentas hechas a partir de otras, en el doc hay un glosario de variables
#A grandes razgos los aspectos q se evaluaron fueron:
#Pl/m: Plántulas por metro lineal de surco: Entiendo que se refiere a la cantidad de plantulas q se pusieron en un principio en cada sitio, en dicho caso tiene sentido que RELATIVICEMOS todos los resultados a la cantidad inicial de plantulas de cada sitio!
Plantulas <- crudos %>%
group_by(Año, Localidad, Línea) %>%
summarise(Pl_m = unique(Pl_m))  # o mean(Pl_m) si hay más de un valor
####    VARIABLES  ####
#Hay una banda de variables muchas surgen de cuentas hechas a partir de otras, en el doc hay un glosario de variables
#A grandes razgos los aspectos q se evaluaron fueron:
#Pl/m: Plántulas por metro lineal de surco: Entiendo que se refiere a la cantidad de plantulas q se pusieron en un principio en cada sitio, en dicho caso tiene sentido que RELATIVICEMOS todos los resultados a la cantidad inicial de plantulas de cada sitio!
Plantulas <- crudos %>%
group_by(Año, Localidad, Línea) %>%
summarise(Pl/m = unique(Pl/m))  # o mean(Pl_m) si hay más de un valor
####    VARIABLES  ####
#Hay una banda de variables muchas surgen de cuentas hechas a partir de otras, en el doc hay un glosario de variables
#A grandes razgos los aspectos q se evaluaron fueron:
#Pl/m: Plántulas por metro lineal de surco: Entiendo que se refiere a la cantidad de plantulas q se pusieron en un principio en cada sitio, en dicho caso tiene sentido que RELATIVICEMOS todos los resultados a la cantidad inicial de plantulas de cada sitio!
Plantulas <- crudos %>%
group_by(Año, Localidad, Línea) %>%
summarise(Pl/m = mean(Pl/m))  # o mean(Pl_m) si hay más de un valor
####    VARIABLES  ####
#Hay una banda de variables muchas surgen de cuentas hechas a partir de otras, en el doc hay un glosario de variables
#A grandes razgos los aspectos q se evaluaron fueron:
#Pl/m: Plántulas por metro lineal de surco: Entiendo que se refiere a la cantidad de plantulas q se pusieron en un principio en cada sitio, en dicho caso tiene sentido que RELATIVICEMOS todos los resultados a la cantidad inicial de plantulas de cada sitio!
Plantulas <- crudos %>%
group_by(Año, Localidad, Línea) %>%
summarise(Pl/m == mean(Pl/m))  # o mean(Pl_m) si hay más de un valor
####    VARIABLES  ####
#Hay una banda de variables muchas surgen de cuentas hechas a partir de otras, en el doc hay un glosario de variables
#A grandes razgos los aspectos q se evaluaron fueron:
#Pl/m: Plántulas por metro lineal de surco: Entiendo que se refiere a la cantidad de plantulas q se pusieron en un principio en cada sitio, en dicho caso tiene sentido que RELATIVICEMOS todos los resultados a la cantidad inicial de plantulas de cada sitio!
Plantulas <- crudos %>%
group_by(Año, Localidad, Línea) %>%
summarise(Pl/m = mean(Pl/m))  # o mean(Pl_m) si hay más de un valor
####    VARIABLES  ####
#Hay una banda de variables muchas surgen de cuentas hechas a partir de otras, en el doc hay un glosario de variables
#A grandes razgos los aspectos q se evaluaron fueron:
#Pl/m: Plántulas por metro lineal de surco: Entiendo que se refiere a la cantidad de plantulas q se pusieron en un principio en cada sitio, en dicho caso tiene sentido que RELATIVICEMOS todos los resultados a la cantidad inicial de plantulas de cada sitio!
Plantulas <- crudos %>%
group_by(Año, Localidad, Línea) %>%
summarise(Pl_m = mean(`Pl/m`, na.rm = TRUE)) # Es una paja que la variable tenga / habria que sacarsela a todas las varibles, podemos poner _ en su lugar
View(Plantulas)
print(Plantulas)
print(crudos$`Pl/m`)
tabla_valores <- Plantulas %>%
select(Año, Localidad, Línea, Pl_m) %>%
pivot_wider(
names_from = Localidad,
values_from = Pl_m
)
View(tabla_valores)
## a chequear, puse sulo años 23-24 y relativizado a cantidad inicial de plantulas
datos_largos <- crudos %>%
pivot_longer(
cols = starts_with("PF "),
names_to = "Corte",
values_to = "PF",
names_pattern = "PF (.*)"
) %>%
filter(!is.na(PF),
!Corte %in% c("Total", "total.ºC", "total.mm", "total.d")) %>%
filter(Año == "23-24") %>%                      # solo ciclo 23-24
mutate(PF_rel = PF / `Pl/m`)                    # relativizado por plantas/m
# Boxplots relativizados
ggplot(datos_largos, aes(x = Corte, y = PF_rel, fill = Línea)) +
geom_boxplot(outlier.shape = NA, alpha = 0.7) +
facet_wrap(~Línea) +
theme_minimal() +
labs(y = "Producción relativa (g MS / planta)", x = "Corte")
# Línea con medias relativizadas
ggplot(datos_largos, aes(x = Corte, y = PF_rel, color = Línea, group = Línea)) +
stat_summary(fun = mean, geom = "line", size = 1) +
stat_summary(fun = mean, geom = "point", size = 2) +
theme_minimal() +
labs(y = "Producción relativa (g MS / planta)", x = "Corte")
setwd("D:/Carrera/Cursada_actual/Biome2/TP0")
BD_adiposidad<-read.table("Adiposidad.txt", header=T)
View(BD_adiposidad)
View(BD_adiposidad)
View(BD_adiposidad)
View(BD_adiposidad)
m1<-lm(TAC,Peso, data = BD_adiposidad)
m1<-lm(TAC~Peso, data = BD_adiposidad)
summary(m1)
m2<-lm(TAC~Sexo, data = BD_adiposidad)
summary(m2)
anova(m2)
m3<-lm(TAC~Sexo*Peso, data= BD_adiposidad)
sumary(m3)
summary(m3)
BD_iris<-read.table("iris.txt", header=T)
View(BD_iris)
library(dplyr)
library(tidyr)
versicolor<-BD_iris %>%
filter(!BD_iris$especie=="Versicolor")
View(versicolor)
versicolor<-BD_iris %>%
filter(BD_iris$especie=="Versicolor")
mv<-lm(LongSepalo~LongPetdo, data=versicolor)
mv<-lm(LongSepalo~LongPetalo, data=versicolor)
summary(mv)
Setosa<-BD_iris %>%
filter(BD_iris$especie=="Setosa")
ms<-lm(LongSepalo~AnchoSepalo, data=Setosa)
summary(ms)
Virginica<-BD_iris %>%
filter(BD_iris$especie=="Virginica")
plot(Virginica$AnchoSepalo, Virginica$LongSepalo)
boxplot(BD_iris$especie, BD_iris$AnchoSepalo)
boxplot(BD_iris$especie, as.numeric(BD_iris$AnchoSepalo))
plot(BD_iris$especie, BD_iris$AnchoSepalo)
boxplot(BD_iris$especie, BD_iris$AnchoSepalo)
barplot(BD_iris$especie, BD_iris$AnchoSepalo)
barplot(BD_iris$especie~ BD_iris$AnchoSepalo)
barplot(BD_iris$AnchoSepalo)
boxplot(AnchoSepalo~especie, data=BD_iris)
boxplot(LongSepalo~especie, data=BD_iris)
hist(LongSepalo, data=BD_iris)
barplot(LongSepalo, data=BD_iris)
barplot(BD_iris$LongSepalo)
hist(BD_iris$LongSepalo)
hist(BD_iris$AnchoSepalo)
hist(BD_iris$AnchoPetalo)
boxplot(BD_iris$LongPetalo)
boxplot(BD_iris$LongPetalo~BD_iris$especie)
summary(ms)
confint(Setosa$LongSepalo)
Setosa<-as.data.frame(Setosa)
confint(Setosa$LongSepalo)
confint(Setosa$LongSepalo)
View(Setosa)
confint(Setosa$LongSepalo)
Setosa<-as.data.frame(Setosa)
class(Setosa)
confint(Setosa$LongSepalo)
LongSepaloSetosa<-Setosa$LongSepalo
confint(LongSepaloSetosa)
confint(ms)
ms<-lm(AnchoSepalo~LongSepalo, data=Setosa)
summary(ms)
confint(ms)
resultado_t <- t.test(Setosa$LongSepalo, conf.level = 0.95)
resultado_t
m4<-lm(AnchoSepalo~especie, data=BD_iris)
anova(m4)
library(dplyr)
library(purrr)
library(ggplot2)
library(MuMIn)
library(tidyr)
library(tidyverse)
library(broom)
library(lme4)
library(scales)
library(glmmTMB)
library(DHARMa)
library(emmeans)
library(readxl)
crudos <- read_excel("CJB_Datos concurso jovenes de bioestadistica.xlsx")
# Paso a factor las variables que crrespondan
crudos$Bloque<- as.factor(crudos$Bloque)
####    VARIABLES  ####
#Hay una banda de variables muchas surgen de cuentas hechas a partir de otras, en el doc hay un glosario de variables
#A grandes razgos los aspectos q se evaluaron fueron:
#Pl/m: Plántulas por metro lineal de surco: Entiendo que se refiere a la cantidad de plantulas q se pusieron en un principio en cada sitio, en dicho caso tiene sentido que RELATIVICEMOS todos los resultados a la cantidad inicial de plantulas de cada sitio!
Plantulas <- crudos %>%
group_by(Año, Localidad, Línea) %>%
summarise(Pl_m = mean(`Pl/m`, na.rm = TRUE)) # Es una paja que la variable tenga / habria que sacarsela a todas las varibles, podemos poner _ en su lugar
#alv faltan un monton de datos, faltan todos los de 2024 - 2025, ademas no todas las lineas tienen las mismas plantulas iniciales asique vamos a tener que relativizar!
tabla_valores <- Plantulas %>%
select(Año, Localidad, Línea, Pl_m) %>%
pivot_wider(
names_from = Localidad,
values_from = Pl_m
)
# 1) Tomamos como referencia la densidad de plantas (Pl/m) de 23-24
plantas_ref <- crudos %>%
filter(Año == "23-24") %>%
group_by(Localidad, Línea, Bloque) %>%
summarise(Pl_m_ref = mean(`Pl/m`, na.rm = TRUE), .groups = "drop")
# 2) Creamos la base 'relativos'
relativos <- crudos %>%
left_join(plantas_ref, by = c("Localidad", "Línea", "Bloque")) %>%
mutate(
# usamos siempre Pl/m de 23-24 como denominador
Pl_m_usada = ifelse(Año == "24-25", Pl_m_ref, `Pl/m`)
) %>%
# 3) Dividimos todas las variables numéricas (excepto Pl/m y las auxiliares)
mutate(across(
where(is.numeric) & !c("Pl/m","Pl_m_ref","Pl_m_usada"),
~ .x / Pl_m_usada
)) %>%
# 4) Limpiamos auxiliares si no se quieren guardar
select(-Pl_m_ref, -Pl_m_usada)
#configuro los datos para hacer analisis exploratorios
datos_largos <- relativos %>%
pivot_longer(
cols = starts_with("PF "),
names_to = "Corte",
values_to = "PF",
names_pattern = "PF (.*)"
) %>%
filter(!is.na(PF),
!Corte %in% c("Total", "total.ºC", "total.mm", "total.d"))
ggplot(datos_largos, aes(x = Corte, y = PF, fill = Línea)) +
geom_boxplot(outlier.shape = NA, alpha = 0.7) +
facet_wrap(~Línea) +
theme_minimal() +
labs(y = "Producción de forraje (g MS/m)", x = "Corte")
## a chequear y relativizado a cantidad inicial de plantulas
datos_largos_PF <- relativos %>%
pivot_longer(
cols = c("PF 1", "PF 2", "PF 3", "PF 4"),
names_to = "Corte",
values_to = "PF",
names_pattern = "PF (.*)"
) %>%
mutate(,
Corte = factor(Corte, levels = c("1","2","3","4"))) %>%
select(Año, Localidad, Línea, Bloque, Corte, PF)
# LLUVIA
datos_mm <- relativos %>%
pivot_longer(
cols = matches("^TC\\.mm [1-4]$"),    # columnas TC.mm 1,2,3,4
names_to = "Corte",
values_to = "TC"
) %>%
filter(!is.na(TC))%>%
mutate(                         # relativizado por plantas
Corte = factor(gsub("TC.mm ", "", Corte),      # dejar solo número de corte
levels = c("1", "2", "3", "4"))  # porque la 4 no sale en los grafico :( ??
)
ggplot(datos_mm, aes(x = Corte, y = TC, color = Línea, group = Línea)) +
stat_summary(fun = mean, geom = "line", linewidth = 1) +
stat_summary(fun = mean, geom = "point", size = 2) +
facet_wrap(~Localidad) +
theme_minimal() +
labs(y = "TC.mm relativo (mm acumulados / planta)",
x = "Corte",
title = "Medias de TC.mm relativo por cortes en cada localidad")
### TEMPERATURA: ####
datos_TC <- relativos %>%
pivot_longer(
cols = matches("^TC\\.ºC [1-4]$"),    # columnas TC.ºC 1,2,3,4
names_to = "Corte",
values_to = "TC"
) %>%
filter(!is.na(TC))%>%
mutate(                         # relativizado por plantas
Corte = factor(gsub("TC.ºC ", "", Corte),      # dejar solo número de corte
levels = c("1", "2", "3", "4"))  # porque la 4 no sale en los grafico :( ??
)
ggplot(datos_TC, aes(x = Corte, y = TC, color = Línea, group = Línea)) +
stat_summary(fun = mean, geom = "line", linewidth = 1) +
stat_summary(fun = mean, geom = "point", size = 2) +
facet_wrap(~Localidad) +
theme_minimal() +
labs(y = "TC.ºC relativo (°C acumulados / planta)",
x = "Corte",
title = "Medias de TC.ºC relativo por cortes en cada localidad")
View(crudos)
datos_dia <- relativos %>%
pivot_longer(
cols = matches("^TC\\.d [1-4]$"),    # columnas TC.d 1,2,3,4
names_to = "Corte",
values_to = "TC"
) %>%
filter(!is.na(TC))%>%
mutate(                         # relativizado por plantas
Corte = factor(gsub("TC.d ", "", Corte),      # dejar solo número de corte
levels = c("1", "2", "3", "4"))  # porque la 4 no sale en los grafico :( ??
)
ggplot(datos_dia, aes(x = Corte, y = TC, color = Línea, group = Línea)) +
stat_summary(fun = mean, geom = "line", linewidth = 1) +
stat_summary(fun = mean, geom = "point", size = 2) +
facet_wrap(~Localidad) +
theme_minimal() +
labs(y = "TC.d relativo (TC por día / planta)",
x = "Corte",
title = "Medias de TC.d relativo por cortes en cada localidad")
View(relativos)
ggplot(crudos, aes(x = Línea, y = PFtotal, fill = Línea)) +
geom_boxplot() +
facet_wrap(~ Localidad) +
labs(
title = "Producción (PFtotal) por Línea en cada Localidad",
x = "Línea",
y = "PFtotal"
) +
theme_minimal() +
theme(legend.position = "none")
ggplot(crudos, aes(x = Línea, y =`PF total`, fill = Línea)) +
geom_boxplot() +
facet_wrap(~ Localidad) +
labs(
title = "Producción (PFtotal) por Línea en cada Localidad",
x = "Línea",
y = "PF total"
) +
theme_minimal() +
theme(legend.position = "none")
#PRODUCCION TOTAL en cada sitio para cada planta
PF_total <- crudos %>%
rename(PF_total = `PF total`)
ggplot(crudos, aes(x = Línea, y =`PF Total`, fill = Línea)) +
geom_boxplot() +
facet_wrap(~ Localidad) +
labs(
title = "Producción (PFtotal) por Línea en cada Localidad",
x = "Línea",
y = "PF total"
) +
theme_minimal() +
theme(legend.position = "none")
#Según localidad x línea
ggplot(crudos, aes(x = Localidad, y =`PF Total`, fill = Localidad)) +
geom_boxplot() +
facet_wrap(~ Línea) +
labs(
title = "Producción (PFtotal) por Localidad según la Línea",
x = "Localidad",
y = "PF total"
) +
theme_minimal() +
theme(legend.position = "none")
#PRODUCCION TOTAL en cada sitio para cada planta
#Según linea x localidad
ggplot(relativos, aes(x = Línea, y =`PF Total`, fill = Línea)) +
geom_boxplot() +
facet_wrap(~ Localidad) +
labs(
title = "Producción (PFtotal) por Línea en cada Localidad",
x = "Línea",
y = "PF total"
) +
theme_minimal() +
theme(legend.position = "none")
#PRODUCCION TOTAL en cada sitio para cada planta
#Según linea x localidad
ggplot(relativos, aes(x = Línea, y =`PF Total`, fill = Línea)) +
geom_boxplot() +
facet_wrap(~ Localidad) +
labs(
title = "Producción relativizada (PFtotal) por Línea en cada Localidad",
x = "Línea",
y = "PF total"
) +
theme_minimal() +
theme(legend.position = "none")
#Según localidad x línea
ggplot(relativos, aes(x = Localidad, y =`PF Total`, fill = Localidad)) +
geom_boxplot() +
facet_wrap(~ Línea) +
labs(
title = "Producción relativizada (PFtotal) por Localidad según la Línea",
x = "Localidad",
y = "PF total"
) +
theme_minimal() +
theme(legend.position = "none")
library(dplyr)
library(purrr)
library(ggplot2)
library(MuMIn)
library(tidyr)
library(tidyverse)
library(broom)
library(lme4)
library(scales)
library(glmmTMB)
library(DHARMa)
library(emmeans)
library(readxl)
#Producción por localidad sin usar a las líneas como factor
ggplot(relativos, aes(x = Localidad, y =`PF Total`, fill = Localidad)) +
geom_boxplot() +
labs(
title = "Producción relativizada (PFtotal) por Localidad",
x = "Localidad",
y = "PF total"
) +
theme_minimal() +
theme(legend.position = "none")
ggplot(relativos, aes(x = Línea, y =`PF Total`, fill = Línea)) +
geom_boxplot() +
labs(
title = "Producción relativizada (PFtotal) por Línea",
x = "Línea",
y = "PF total"
) +
theme_minimal() +
theme(legend.position = "none")
View(relativos)
View(relativos)
ggplot(relativos, aes(x = Localidad, y =`PF total.d`, fill = Localidad)) +
geom_boxplot() +
labs(
title = "Producción relativizada (PFtotal) por Localidad por día",
x = "Localidad",
y = "PF total"
) +
theme_minimal() +
theme(legend.position = "none")
#Producción por linea sin usar las localidades como factor
ggplot(relativos, aes(x = Línea, y =`PF total.d`, fill = Línea)) +
geom_boxplot() +
labs(
title = "Producción relativizada (PFtotal) por Línea por día",
x = "Línea",
y = "PF total"
) +
theme_minimal() +
theme(legend.position = "none")
ggplot(relativos, aes(x = Localidad, y =`PF total.d`, fill = Localidad)) +
geom_boxplot() +
labs(
title = "Producción relativizada (PFtotal.d) por Localidad por día",
x = "Localidad",
y = "PF total"
) +
theme_minimal() +
theme(legend.position = "none")
#Producción por linea sin usar las localidades como factor
ggplot(relativos, aes(x = Línea, y =`PF total.d`, fill = Línea)) +
geom_boxplot() +
labs(
title = "Producción relativizada (PFtotal.d) por Línea por día",
x = "Línea",
y = "PF total"
) +
theme_minimal() +
theme(legend.position = "none")
#Densidad de Macollos
ggplot(crudos, aes(x = Línea, y =`DMR`, fill = Línea)) +
geom_boxplot() +
+facet_wrap(~Localidad)
#Densidad de Macollos
ggplot(crudos, aes(x = Línea, y =`DMR`, fill = Línea)) +
geom_boxplot() +
facet_wrap(~Localidad)+
labs(
title = "Cantidad de Macollor Reproductivos segpun cantidad de Macollos Totales(DMR) por Línea",
x = "Línea",
y = "DMR"
) +
theme_minimal() +
theme(legend.position = "none")
#Densidad de Macollos
ggplot(crudos, aes(x = Línea, y =`DMR`, fill = Línea)) +
geom_boxplot() +
labs(
title = "Cantidad de Macollor Reproductivos segpun cantidad de Macollos Totales(DMR) por Línea",
x = "Línea",
y = "DMR"
) +
theme_minimal() +
theme(legend.position = "none")
#Densidad de Macollos
ggplot(crudos, aes(x = Línea, y =`DMR`, fill = Línea)) +
geom_boxplot() +
labs(
title = "Cantidad de Macollor Reproductivos según cantidad de Macollos Totales(DMR) por Línea",
x = "Línea",
y = "DMR"
) +
theme_minimal() +
theme(legend.position = "none")
#Según localidad?
ggplot(crudos, aes(x = Localidad, y =`DMR`, fill = Localidad)) +
geom_boxplot() +
labs(
title = "Cantidad de Macollor Reproductivos según cantidad de Macollos Totales(DMR) por Localidad",
x = "Localidad",
y = "DMR"
) +
theme_minimal() +
theme(legend.position = "none")
