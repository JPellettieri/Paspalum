select(-Pl_m_ref, -Pl_m_usada)
# Boxplot
ggplot(datos_PFT, aes(x = Localidad, y = PF_rel, fill = Línea)) +
geom_boxplot(alpha = 0.7, outlier.shape = 21) +
geom_jitter(aes(color = Línea), size = 2, alpha = 0.8,
position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8))+
facet_wrap(~Año) +
theme_minimal() +
labs(
y = "PF Total relativo (kg / planta)",
x = "Localidad",
title = "PF Total relativo por localidad y línea"
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major.x = element_blank()
)
crudos <- read_excel("CJB_Datos concurso jovenes de bioestadistica.xlsx")
summary(crudos)
# Paso a factor las variables que crrespondan
crudos$Bloque<- as.factor(crudos$Bloque)
#veo si esta balanceado entre tratamientos
table(crudos$Año)
table(crudos$Localidad)
table(crudos$Línea)
# Cruce Línea x Localidad x año
xtabs(~ Año + Localidad + Línea, data = crudos)
####    VARIABLES  ####
#Hay una banda de variables muchas surgen de cuentas hechas a partir de otras, en el doc hay un glosario de variables
#A grandes razgos los aspectos q se evaluaron fueron:
#Pl/m: Plántulas por metro lineal de surco: Entiendo que se refiere a la cantidad de plantulas q se pusieron en un principio en cada sitio, en dicho caso tiene sentido que RELATIVICEMOS todos los resultados a la cantidad inicial de plantulas de cada sitio!
Plantulas <- crudos %>%
group_by(Año, Localidad, Línea) %>%
summarise(Pl_m = mean(`Pl/m`, na.rm = TRUE)) # Es una paja que la variable tenga / habria que sacarsela a todas las varibles, podemos poner _ en su lugar
print(Plantulas)
#alv faltan un monton de datos, faltan todos los de 2024 - 2025, ademas no todas las lineas tienen las mismas plantulas iniciales asique vamos a tener que relativizar!
tabla_valores <- Plantulas %>%
select(Año, Localidad, Línea, Pl_m) %>%
pivot_wider(
names_from = Localidad,
values_from = Pl_m
)
# 1) Tomamos como referencia la densidad de plantas (Pl/m) de 23-24
plantas_ref <- crudos %>%
filter(Año == "23-24") %>%
group_by(Localidad, Línea, Bloque) %>%
summarise(Pl_m_ref = mean(`Pl/m`, na.rm = TRUE), .groups = "drop")
# 2) Creamos la base 'relativos'
relativos <- crudos %>%
left_join(plantas_ref, by = c("Localidad", "Línea", "Bloque")) %>%
mutate(
# usamos siempre Pl/m de 23-24 como denominador
Pl_m_usada = ifelse(Año == "24-25", Pl_m_ref, `Pl/m`)
) %>%
# 3) Dividimos todas las variables numéricas (excepto Pl/m y las auxiliares)
mutate(across(
where(is.numeric) & !c("Pl/m","Pl_m_ref","Pl_m_usada"),
~ .x / Pl_m_usada
)) %>%
# 4) Limpiamos auxiliares si no se quieren guardar
select(-Pl_m_ref, -Pl_m_usada)
# Boxplot
ggplot(datos_PFT, aes(x = Localidad, y = PF_rel, fill = Línea)) +
geom_boxplot(alpha = 0.7, outlier.shape = 21) +
geom_jitter(aes(color = Línea), size = 2, alpha = 0.8,
position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8))+
facet_wrap(~Año) +
theme_minimal() +
labs(
y = "PF Total relativo (kg / planta)",
x = "Localidad",
title = "PF Total relativo por localidad y línea"
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid.major.x = element_blank()
)
ggplot(crudos %>% filter(!is.na(Pl/m)),
aes(x = Localidad, y = Pl/m, color = Línea)) +
geom_jitter(position = position_jitter(width = 0.2), size = 2, alpha = 0.7) +
labs(x = "Localidad", y = "Plántulas por metro",
title = "Cantidad de plántulas por línea en cada localidad") +
theme_minimal() +
theme(legend.position = "bottom")
ggplot(crudos %>% filter(!is.na('Pl/m')),
aes(x = Localidad, y = 'Pl/m', color = Línea)) +
geom_jitter(position = position_jitter(width = 0.2), size = 2, alpha = 0.7) +
labs(x = "Localidad", y = "Plántulas por metro",
title = "Cantidad de plántulas por línea en cada localidad") +
theme_minimal() +
theme(legend.position = "bottom")
datos_plot <- crudos %>%
filter(!is.na(Pl/m)) %>%
group_by(Localidad, Línea) %>%
summarise(
mean_pl = mean(Pl/m, na.rm = TRUE),
se_pl = sd(Pl/m, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
ggplot(datos_plot, aes(x = Localidad, y = mean_pl, fill = Línea)) +
geom_col(position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean_pl - se_pl, ymax = mean_pl + se_pl),
position = position_dodge(width = 0.8), width = 0.2) +
labs(x = "Localidad", y = "Plántulas por metro",
title = "Cantidad de plántulas por línea en cada localidad") +
theme_minimal() +
theme(legend.position = "bottom")
datos_plot <- crudos %>%
filter(!is.na(Pl/m)) %>%
group_by(Localidad, Línea) %>%
summarise(
mean_pl = mean(Pl/m, na.rm = TRUE),
se_pl = sd(Pl/m, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
datos_plot <- crudos %>%
filter(!is.na('Pl/m')) %>%
group_by(Localidad, Línea) %>%
summarise(
mean_pl = mean('Pl/m', na.rm = TRUE),
se_pl = sd('Pl/m', na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
datos_plot <- crudos %>%
filter(!is.na('Pl/m')) %>%
group_by(Localidad, Línea) %>%
summarise(
mean_pl = mean('Pl/m', na.rm = TRUE),
se_pl = sd('Pl/m', na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
ggplot(datos_plot, aes(x = Localidad, y = mean_pl, fill = Línea)) +
geom_col(position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean_pl - se_pl, ymax = mean_pl + se_pl),
position = position_dodge(width = 0.8), width = 0.2) +
labs(x = "Localidad", y = "Plántulas por metro",
title = "Cantidad de plántulas por línea en cada localidad") +
theme_minimal() +
theme(legend.position = "bottom")
datos_plot <- crudos %>%
filter(!is.na(`Pl/m`)) %>%
group_by(Localidad, Línea) %>%
summarise(
mean_pl = mean(`Pl/m`, na.rm = TRUE),
se_pl = sd(`Pl/m`, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
ggplot(datos_plot, aes(x = Localidad, y = mean_pl, fill = Línea)) +
geom_col(position = position_dodge(width = 0.8)) +
geom_errorbar(aes(ymin = mean_pl - se_pl, ymax = mean_pl + se_pl),
position = position_dodge(width = 0.8), width = 0.2) +
labs(x = "Localidad", y = "Plántulas por metro",
title = "Cantidad de plántulas por línea en cada localidad") +
theme_minimal() +
theme(legend.position = "bottom")
## Exploratorio de cantidad de plantulas q crecieron en cada lugar con cada linea
datos_plot <- crudos %>%
filter(!is.na(`Pl/m`)) %>%
group_by(Localidad, Línea) %>%
summarise(
mean_pl = mean(`Pl/m`, na.rm = TRUE),
se_pl = sd(`Pl/m`, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
ggplot(datos_plot, aes(x = Localidad, y = mean_pl, fill = Línea)) +
geom_col(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_errorbar(aes(ymin = mean_pl - se_pl, ymax = mean_pl + se_pl),
position = position_dodge(width = 0.8), width = 0.2) +
# puntos crudos
geom_jitter(data = crudos %>% filter(!is.na(`Pl/m`)),
aes(x = Localidad, y = `Pl/m`, color = Línea),
position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8),
alpha = 0.8, size = 2, inherit.aes = FALSE) +
labs(x = "Localidad", y = "Plántulas por metro",
title = "Cantidad de plántulas por línea en cada localidad") +
theme_minimal() +
theme(legend.position = "bottom")
ggplot(datos_plot, aes(x = Localidad, y = mean_pl, fill = Línea)) +
geom_col(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_errorbar(aes(ymin = mean_pl - se_pl, ymax = mean_pl + se_pl),
position = position_dodge(width = 0.8), width = 0.2) +
# puntos crudos
geom_jitter(data = crudos %>% filter(!is.na(`Pl/m`)),
aes(x = Localidad, y = `Pl/m`, color = Línea),
#position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8),
alpha = 0.8, size = 2, inherit.aes = FALSE) +
labs(x = "Localidad", y = "Plántulas por metro",
title = "Cantidad de plántulas por línea en cada localidad") +
theme_minimal() +
theme(legend.position = "bottom")
ggplot(datos_plot, aes(x = Localidad, y = mean_pl, fill = Línea)) +
geom_col(position = position_dodge(width = 0.8), alpha = 0.7) +
geom_errorbar(aes(ymin = mean_pl - se_pl, ymax = mean_pl + se_pl),
position = position_dodge(width = 0.8), width = 0.2) +
# puntos crudos
geom_jitter(data = crudos %>% filter(!is.na(`Pl/m`)),
aes(x = Localidad, y = `Pl/m`, color = Línea),
position = position_jitterdodge(jitter.width = 0.1, dodge.width = 0.5),
alpha = 0.8, size = 2, inherit.aes = FALSE) +
labs(x = "Localidad", y = "Plántulas por metro",
title = "Cantidad de plántulas por línea en cada localidad") +
theme_minimal() +
theme(legend.position = "bottom")
## Exploratorio de cantidad de plantulas q crecieron en cada lugar con cada linea
datos_plot <- crudos %>%
filter(!is.na(`Pl/m`)) %>%
group_by(Localidad, Línea) %>%
summarise(
mean_pl = mean(`Pl/m`, na.rm = TRUE),
se_pl = sd(`Pl/m`, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
ggplot(datos_plot, aes(x = Localidad, y = mean_pl, fill = Línea)) +
# barras de medias
geom_col(position = position_dodge(width = 0.8), alpha = 0.7) +
# barras de error
geom_errorbar(aes(ymin = mean_pl - se_pl, ymax = mean_pl + se_pl),
position = position_dodge(width = 0.8), width = 0.2) +
# puntos crudos alineados
geom_point(data = crudos %>% filter(!is.na(`Pl/m`)),
aes(x = Localidad, y = `Pl/m`, color = Línea),
position = position_dodge(width = 0.8),
size = 2, alpha = 0.8, inherit.aes = FALSE) +
labs(x = "Localidad", y = "Plántulas por metro",
title = "Cantidad de plántulas por línea en cada localidad") +
theme_minimal() +
theme(legend.position = "bottom")
#configuro los datos para hacer analisis exploratorios
datos_largos <- relativos %>%
pivot_longer(
cols = starts_with("PF "),
names_to = "Corte",
values_to = "PF",
names_pattern = "PF (.*)"
) %>%
filter(!is.na(PF),
!Corte %in% c("Total", "total.ºC", "total.mm", "total.d"))
ggplot(datos_largos, aes(x = Corte, y = PF, fill = Línea)) +
geom_boxplot(outlier.shape = NA, alpha = 0.7) +
facet_wrap(~Línea) +
theme_minimal() +
labs(y = "Producción de forraje (g MS/m)", x = "Corte")
#los boxplots muestran distribucion bastante normal
ggplot(datos_largos, aes(x = Corte, y = PF, color = Línea, group = Línea)) +
stat_summary(fun = mean, geom = "line", size = 1) +
stat_summary(fun = mean, geom = "point", size = 2) +
theme_minimal() +
labs(y = "Producción de forraje (g MS/m)", x = "Corte")
## a chequear y relativizado a cantidad inicial de plantulas
datos_largos_PF <- relativos %>%
pivot_longer(
cols = c("PF 1", "PF 2", "PF 3", "PF 4"),
names_to = "Corte",
values_to = "PF",
names_pattern = "PF (.*)"
) %>%
mutate(,
Corte = factor(Corte, levels = c("1","2","3","4"))) %>%
select(Año, Localidad, Línea, Bloque, Corte, PF)
tablas_PF_por_sitio <- datos_largos_PF %>%
group_split(Localidad)
tablas_PF_por_sitio
# Boxplots relativizados
ggplot(datos_largos, aes(x = Corte, y = PF, fill = Línea)) +
geom_boxplot(outlier.shape = NA, alpha = 0.7) +
facet_wrap(~Línea) +
theme_minimal() +
labs(y = "Producción relativa (g MS / planta)", x = "Corte")
# Línea con medias relativizadas
ggplot(datos_largos, aes(x = Corte, y = PF, color = Línea, group = Línea)) +
stat_summary(fun = mean, geom = "line", size = 1) +
stat_summary(fun = mean, geom = "point", size = 2) +
theme_minimal() +
labs(y = "Producción relativa (g MS / planta)", x = "Corte")
ggplot(datos_largos, aes(x = Corte, y = PF, color = Línea, group = Línea)) +
stat_summary(fun = mean, geom = "line", linewidth = 1) +
stat_summary(fun = mean, geom = "point", size = 2) +
facet_wrap(~Localidad) +
theme_minimal() +
labs(y = "Producción relativa (g MS / planta)",
x = "Corte",
title = "Medias de PF relativa por corte y línea en cada localidad")
### TEMPERATURA: ####
datos_TC <- relativos %>%
pivot_longer(
cols = matches("^TC\\d [1-4]$"),    # columnas TC.ºC 1,2,3,4
names_to = "Corte",
values_to = "TC"
) %>%
filter(!is.na(TC))%>%
mutate(                         # relativizado por plantas
Corte = factor(gsub("TC.ºC ", "", Corte),      # dejar solo número de corte
levels = c("1", "2", "3", "4"))  # porque la 4 no sale en los grafico :( ??
)
ggplot(datos_TC, aes(x = Corte, y = TC, color = Línea, group = Línea)) +
stat_summary(fun = mean, geom = "line", linewidth = 1) +
stat_summary(fun = mean, geom = "point", size = 2) +
facet_wrap(~Localidad) +
theme_minimal() +
labs(y = "TC.ºC relativo (°C acumulados / planta)",
x = "Corte",
title = "Medias de TC.ºC relativo por cortes en cada localidad")
### TEMPERATURA: ####
datos_TC <- relativos %>%
pivot_longer(
cols = matches("^TC\\.ºC [1-4]$"),    # columnas TC.ºC 1,2,3,4
names_to = "Corte",
values_to = "TC"
) %>%
filter(!is.na(TC))%>%
mutate(                         # relativizado por plantas
Corte = factor(gsub("TC.ºC ", "", Corte),      # dejar solo número de corte
levels = c("1", "2", "3", "4"))  # porque la 4 no sale en los grafico :( ??
)
ggplot(datos_TC, aes(x = Corte, y = TC, color = Línea, group = Línea)) +
stat_summary(fun = mean, geom = "line", linewidth = 1) +
stat_summary(fun = mean, geom = "point", size = 2) +
facet_wrap(~Localidad) +
theme_minimal() +
labs(y = "TC.ºC relativo (°C acumulados / planta)",
x = "Corte",
title = "Medias de TC.ºC relativo por cortes en cada localidad")
#configuro los datos para hacer analisis exploratorios
datos_largos <- crudos %>%
pivot_longer(
cols = starts_with("PF "),
names_to = "Corte",
values_to = "PF",
names_pattern = "PF (.*)"
) %>%
filter(!is.na(PF),
!Corte %in% c("Total", "total.ºC", "total.mm", "total.d"))
ggplot(datos_largos, aes(x = Corte, y = PF, fill = Línea)) +
geom_boxplot(outlier.shape = NA, alpha = 0.7) +
facet_wrap(~Línea) +
theme_minimal() +
labs(y = "Producción de forraje (g MS/m)", x = "Corte")
#los boxplots muestran distribucion bastante normal
ggplot(datos_largos, aes(x = Corte, y = PF, color = Línea, group = Línea)) +
stat_summary(fun = mean, geom = "line", size = 1) +
stat_summary(fun = mean, geom = "point", size = 2) +
theme_minimal() +
labs(y = "Producción de forraje (g MS/m)", x = "Corte")
## a chequear, puse solo años 23-24 y relativizado a cantidad inicial de plantulas
datos_largos_PF <- crudos %>%
pivot_longer(
cols = c("PF 1", "PF 2", "PF 3", "PF 4"),
names_to = "Corte",
values_to = "PF",
names_pattern = "PF (.*)"
) %>%
mutate(
PF_rel = PF / `Pl/m`,
Corte = factor(Corte, levels = c("1","2","3","4"))) %>%
select(Año, Localidad, Línea, Bloque, Corte, PF, PF_rel)
tablas_PF_por_sitio <- datos_largos_PF %>%
group_split(Localidad)
tablas_PF_por_sitio
# Boxplots relativizados
ggplot(datos_largos_PF, aes(x = Corte, y = PF_rel, fill = Línea)) +
geom_boxplot(outlier.shape = NA, alpha = 0.7) +
facet_wrap(~Línea) +
theme_minimal() +
labs(y = "Producción relativa (g MS / planta)", x = "Corte")
# Línea con medias relativizadas
ggplot(datos_largos_PF, aes(x = Corte, y = PF_rel, color = Línea, group = Línea)) +
stat_summary(fun = mean, geom = "line", size = 1) +
stat_summary(fun = mean, geom = "point", size = 2) +
theme_minimal() +
labs(y = "Producción relativa (g MS / planta)", x = "Corte")
ggplot(datos_largos_PF, aes(x = Corte, y = PF_rel, color = Línea, group = Línea)) +
stat_summary(fun = mean, geom = "line", linewidth = 1) +
stat_summary(fun = mean, geom = "point", size = 2) +
facet_wrap(~Localidad) +
theme_minimal() +
labs(y = "Producción relativa (g MS / planta)",
x = "Corte",
title = "Medias de PF relativa por corte y línea en cada localidad")
#TEMPERATU:
datos_TC <- crudos %>%
pivot_longer(
cols = matches("^TC\\.ºC [1-4]$"),    # columnas TC.ºC 1,2,3,4
names_to = "Corte",
values_to = "TC"
) %>%
filter(!is.na(TC)) %>%
filter(Año == "23-24") %>%
mutate(
TC_rel = TC / `Pl/m`,                          # relativizado por plantas
Corte = factor(gsub("TC.ºC ", "", Corte),      # dejar solo número de corte
levels = c("1", "2", "3", "4"))
)
ggplot(datos_TC, aes(x = Corte, y = TC_rel, color = Línea, group = Línea)) +
stat_summary(fun = mean, geom = "line", linewidth = 1) +
stat_summary(fun = mean, geom = "point", size = 2) +
facet_wrap(~Localidad) +
theme_minimal() +
labs(y = "TC.ºC relativo (°C acumulados / planta)",
x = "Corte",
title = "Medias de TC.ºC relativo por cortes en cada localidad")
### PRODUCCION DE SEMILLAS ####
pl_ref <- crudos %>% # despues habia que cambiarlo para que use directamente la base de datos relativizadas.
filter(Año == "23-24") %>%
distinct(Localidad, Línea, Bloque, .keep_all = TRUE) %>%
select(Localidad, Línea, Bloque, Pl_m_ref = `Pl/m`)
datos_Semillas <- crudos %>%
left_join(pl_ref, by = c("Localidad", "Línea", "Bloque")) %>%
mutate(
Prod_Sem_rel      = `Prod. Sem` / Pl_m_ref,
Prod_S_llenas_rel = `Prod. S. llenas` / Pl_m_ref
)
datos_Semillas<-relativos
Prod_Sem_rel<-relativos$`Prod. Sem`
Prod_S_llenas_rel<-relativos$`Prod. S. llenas`
ggplot(datos_Semillas, aes(x = Localidad, y = Prod_Sem_rel, fill = Línea)) +
geom_boxplot(alpha = 0.7, outlier.shape = NA, position = position_dodge(width = 0.8)) +
geom_jitter(aes(color = Línea), size = 2, alpha = 0.8,
position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8)) +
facet_wrap(~Año) +
labs(title = "Producción de Semillas relativizada (Pl/m 23-24 por Bloque)",
y = "Prod. Sem / Pl/m (23-24)", x = "Localidad") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Dark2")
ggplot(datos_Semillas, aes(x = Localidad, y = Prod_S_llenas_rel, fill = Línea)) +
geom_boxplot(alpha = 0.7, outlier.shape = NA, position = position_dodge(width = 0.8)) +
geom_jitter(aes(color = Línea), size = 2, alpha = 0.8,
position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8)) +
facet_wrap(~Año) +
labs(title = "Producción de Semillas Llenas relativizada (Pl/m 23-24 por Bloque)",
y = "Prod. Sem / Pl/m (23-24)", x = "Localidad") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_brewer(palette = "Set2") +
scale_color_brewer(palette = "Dark2")
#### Exploratorio de cantidad de plantulas q crecieron en cada lugar con cada linea ####
datos_plot <- crudos %>%
filter(!is.na(`Pl/m`)) %>%
group_by(Localidad, Línea) %>%
summarise(
mean_pl = mean(`Pl/m`, na.rm = TRUE),
se_pl = sd(`Pl/m`, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
ggplot(datos_plot, aes(x = Localidad, y = mean_pl, fill = Línea)) +
# barras de medias
geom_col(position = position_dodge(width = 0.8), alpha = 0.7) +
# barras de error
geom_errorbar(aes(ymin = mean_pl - se_pl, ymax = mean_pl + se_pl),
position = position_dodge(width = 0.8), width = 0.2) +
# puntos crudos alineados
geom_point(data = crudos %>% filter(!is.na(`Pl/m`)),
aes(x = Localidad, y = `Pl/m`, color = Línea),
position = position_dodge(width = 0.8),
size = 2, alpha = 0.8, inherit.aes = FALSE) +
labs(x = "Localidad", y = "Plántulas por metro",
title = "Cantidad de plántulas por línea en cada localidad") +
theme_minimal() +
theme(legend.position = "bottom")
ggplot(datos_plot, aes(x = Localidad, y = mean_pl, fill = Línea)) +
# puntos crudos alineados
geom_point(data = crudos %>% filter(!is.na(`Pl/m`)),
aes(x = Localidad, y = `Pl/m`, color = Línea),
position = position_dodge(width = 0.8),
size = 2, alpha = 0.8, inherit.aes = FALSE) +
labs(x = "Localidad", y = "Plántulas por metro",
title = "Cantidad de plántulas por línea en cada localidad") +
# barras de medias
geom_col(position = position_dodge(width = 0.8), alpha = 0.7) +
# barras de error
geom_errorbar(aes(ymin = mean_pl - se_pl, ymax = mean_pl + se_pl),
position = position_dodge(width = 0.8), width = 0.2) +
theme_minimal() +
theme(legend.position = "bottom")
M_Plantulas <- glm(`Pl/m` ~ Localidad * Línea,
family = poisson(link = "log"),
data = crudos)
Anova(M_Plantulas, type = 3)
library(lme4)
library(car)
library(emmeans)
M_Plantulas <- glm(`Pl/m` ~ Localidad * Línea,
family = poisson(link = "log"),
data = crudos)
Anova(M_Plantulas, type = 3)
#### Exploratorio de cantidad de plantulas q crecieron en cada lugar con cada linea ####
datos_plot <- crudos %>%
filter(!is.na(`Pl/m`)) %>%
group_by(Localidad, Línea) %>%
summarise(
mean_pl = mean(`Pl/m`, na.rm = TRUE),
se_pl = sd(`Pl/m`, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
ggplot(datos_plot, aes(x = Localidad, y = mean_pl, fill = Línea)) +
# puntos crudos alineados
geom_point(data = crudos %>% filter(!is.na(`Pl/m`)),
aes(x = Localidad, y = `Pl/m`, color = Línea),
position = position_dodge(width = 0.8),
size = 2, alpha = 0.8, inherit.aes = FALSE) +
labs(x = "Localidad", y = "Plántulas por metro",
title = "Cantidad de plántulas por línea en cada localidad") +
# barras de medias
geom_col(position = position_dodge(width = 0.8), alpha = 0.7) +
# barras de error
geom_errorbar(aes(ymin = mean_pl - se_pl, ymax = mean_pl + se_pl),
position = position_dodge(width = 0.8), width = 0.2) +
theme_minimal() +
theme(legend.position = "bottom")
library(lme4)
library(car)
